/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace tbims.rpc.entity
{

  /// <summary>
  /// 员工卡登记表
  /// </summary>
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class SYS_EMP_REGISTER : TBase
  {
    private long _empId;
    private string _empName;
    private string _chipId;
    private string _department;
    private byte[] _photo;
    private string _stat;
    private string _chipStat;
    private string _opeUserId;
    private long _opeTime;
    private string _cardType;
    private string _cardId;
    private string _mail;
    private string _gender;
    private string _tel;
    private long _versionNo;
    private List<SYS_EMP_VENUE> _sysEmpVenuelist;

    /// <summary>
    /// 员工编号
    /// </summary>
    public long EmpId
    {
      get
      {
        return _empId;
      }
      set
      {
        __isset.empId = true;
        this._empId = value;
      }
    }

    /// <summary>
    /// 员工名称
    /// </summary>
    public string EmpName
    {
      get
      {
        return _empName;
      }
      set
      {
        __isset.empName = true;
        this._empName = value;
      }
    }

    /// <summary>
    /// 芯片ID
    /// </summary>
    public string ChipId
    {
      get
      {
        return _chipId;
      }
      set
      {
        __isset.chipId = true;
        this._chipId = value;
      }
    }

    /// <summary>
    /// 部门
    /// </summary>
    public string Department
    {
      get
      {
        return _department;
      }
      set
      {
        __isset.department = true;
        this._department = value;
      }
    }

    /// <summary>
    /// 照片信息
    /// </summary>
    public byte[] Photo
    {
      get
      {
        return _photo;
      }
      set
      {
        __isset.photo = true;
        this._photo = value;
      }
    }

    /// <summary>
    /// 员工状态(Y启用N禁用)
    /// </summary>
    public string Stat
    {
      get
      {
        return _stat;
      }
      set
      {
        __isset.stat = true;
        this._stat = value;
      }
    }

    /// <summary>
    /// 卡片状态(Y可用N作废)
    /// </summary>
    public string ChipStat
    {
      get
      {
        return _chipStat;
      }
      set
      {
        __isset.chipStat = true;
        this._chipStat = value;
      }
    }

    /// <summary>
    /// 操作人
    /// </summary>
    public string OpeUserId
    {
      get
      {
        return _opeUserId;
      }
      set
      {
        __isset.opeUserId = true;
        this._opeUserId = value;
      }
    }

    /// <summary>
    /// 操作时间
    /// </summary>
    public long OpeTime
    {
      get
      {
        return _opeTime;
      }
      set
      {
        __isset.opeTime = true;
        this._opeTime = value;
      }
    }

    /// <summary>
    /// 证件类型
    /// </summary>
    public string CardType
    {
      get
      {
        return _cardType;
      }
      set
      {
        __isset.cardType = true;
        this._cardType = value;
      }
    }

    /// <summary>
    /// 证件号码
    /// </summary>
    public string CardId
    {
      get
      {
        return _cardId;
      }
      set
      {
        __isset.cardId = true;
        this._cardId = value;
      }
    }

    /// <summary>
    /// 邮箱地址
    /// </summary>
    public string Mail
    {
      get
      {
        return _mail;
      }
      set
      {
        __isset.mail = true;
        this._mail = value;
      }
    }

    /// <summary>
    /// 性别
    /// </summary>
    public string Gender
    {
      get
      {
        return _gender;
      }
      set
      {
        __isset.gender = true;
        this._gender = value;
      }
    }

    /// <summary>
    /// 联系电话
    /// </summary>
    public string Tel
    {
      get
      {
        return _tel;
      }
      set
      {
        __isset.tel = true;
        this._tel = value;
      }
    }

    /// <summary>
    /// 版本号
    /// </summary>
    public long VersionNo
    {
      get
      {
        return _versionNo;
      }
      set
      {
        __isset.versionNo = true;
        this._versionNo = value;
      }
    }

    /// <summary>
    /// 员工通行场馆
    /// </summary>
    public List<SYS_EMP_VENUE> SysEmpVenuelist
    {
      get
      {
        return _sysEmpVenuelist;
      }
      set
      {
        __isset.sysEmpVenuelist = true;
        this._sysEmpVenuelist = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool empId;
      public bool empName;
      public bool chipId;
      public bool department;
      public bool photo;
      public bool stat;
      public bool chipStat;
      public bool opeUserId;
      public bool opeTime;
      public bool cardType;
      public bool cardId;
      public bool mail;
      public bool gender;
      public bool tel;
      public bool versionNo;
      public bool sysEmpVenuelist;
    }

    public SYS_EMP_REGISTER() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.I64) {
                EmpId = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                EmpName = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.String) {
                ChipId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.String) {
                Department = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 5:
              if (field.Type == TType.String) {
                Photo = iprot.ReadBinary();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 6:
              if (field.Type == TType.String) {
                Stat = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 7:
              if (field.Type == TType.String) {
                ChipStat = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 8:
              if (field.Type == TType.String) {
                OpeUserId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 9:
              if (field.Type == TType.I64) {
                OpeTime = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 10:
              if (field.Type == TType.String) {
                CardType = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 11:
              if (field.Type == TType.String) {
                CardId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 12:
              if (field.Type == TType.String) {
                Mail = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 13:
              if (field.Type == TType.String) {
                Gender = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 14:
              if (field.Type == TType.String) {
                Tel = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 15:
              if (field.Type == TType.I64) {
                VersionNo = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 16:
              if (field.Type == TType.List) {
                {
                  SysEmpVenuelist = new List<SYS_EMP_VENUE>();
                  TList _list20 = iprot.ReadListBegin();
                  for( int _i21 = 0; _i21 < _list20.Count; ++_i21)
                  {
                    SYS_EMP_VENUE _elem22;
                    _elem22 = new SYS_EMP_VENUE();
                    _elem22.Read(iprot);
                    SysEmpVenuelist.Add(_elem22);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("SYS_EMP_REGISTER");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (__isset.empId) {
          field.Name = "empId";
          field.Type = TType.I64;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(EmpId);
          oprot.WriteFieldEnd();
        }
        if (EmpName != null && __isset.empName) {
          field.Name = "empName";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(EmpName);
          oprot.WriteFieldEnd();
        }
        if (ChipId != null && __isset.chipId) {
          field.Name = "chipId";
          field.Type = TType.String;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(ChipId);
          oprot.WriteFieldEnd();
        }
        if (Department != null && __isset.department) {
          field.Name = "department";
          field.Type = TType.String;
          field.ID = 4;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Department);
          oprot.WriteFieldEnd();
        }
        if (Photo != null && __isset.photo) {
          field.Name = "photo";
          field.Type = TType.String;
          field.ID = 5;
          oprot.WriteFieldBegin(field);
          oprot.WriteBinary(Photo);
          oprot.WriteFieldEnd();
        }
        if (Stat != null && __isset.stat) {
          field.Name = "stat";
          field.Type = TType.String;
          field.ID = 6;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Stat);
          oprot.WriteFieldEnd();
        }
        if (ChipStat != null && __isset.chipStat) {
          field.Name = "chipStat";
          field.Type = TType.String;
          field.ID = 7;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(ChipStat);
          oprot.WriteFieldEnd();
        }
        if (OpeUserId != null && __isset.opeUserId) {
          field.Name = "opeUserId";
          field.Type = TType.String;
          field.ID = 8;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(OpeUserId);
          oprot.WriteFieldEnd();
        }
        if (__isset.opeTime) {
          field.Name = "opeTime";
          field.Type = TType.I64;
          field.ID = 9;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(OpeTime);
          oprot.WriteFieldEnd();
        }
        if (CardType != null && __isset.cardType) {
          field.Name = "cardType";
          field.Type = TType.String;
          field.ID = 10;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(CardType);
          oprot.WriteFieldEnd();
        }
        if (CardId != null && __isset.cardId) {
          field.Name = "cardId";
          field.Type = TType.String;
          field.ID = 11;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(CardId);
          oprot.WriteFieldEnd();
        }
        if (Mail != null && __isset.mail) {
          field.Name = "mail";
          field.Type = TType.String;
          field.ID = 12;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Mail);
          oprot.WriteFieldEnd();
        }
        if (Gender != null && __isset.gender) {
          field.Name = "gender";
          field.Type = TType.String;
          field.ID = 13;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Gender);
          oprot.WriteFieldEnd();
        }
        if (Tel != null && __isset.tel) {
          field.Name = "tel";
          field.Type = TType.String;
          field.ID = 14;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Tel);
          oprot.WriteFieldEnd();
        }
        if (__isset.versionNo) {
          field.Name = "versionNo";
          field.Type = TType.I64;
          field.ID = 15;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(VersionNo);
          oprot.WriteFieldEnd();
        }
        if (SysEmpVenuelist != null && __isset.sysEmpVenuelist) {
          field.Name = "sysEmpVenuelist";
          field.Type = TType.List;
          field.ID = 16;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteListBegin(new TList(TType.Struct, SysEmpVenuelist.Count));
            foreach (SYS_EMP_VENUE _iter23 in SysEmpVenuelist)
            {
              _iter23.Write(oprot);
            }
            oprot.WriteListEnd();
          }
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("SYS_EMP_REGISTER(");
      bool __first = true;
      if (__isset.empId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("EmpId: ");
        __sb.Append(EmpId);
      }
      if (EmpName != null && __isset.empName) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("EmpName: ");
        __sb.Append(EmpName);
      }
      if (ChipId != null && __isset.chipId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ChipId: ");
        __sb.Append(ChipId);
      }
      if (Department != null && __isset.department) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Department: ");
        __sb.Append(Department);
      }
      if (Photo != null && __isset.photo) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Photo: ");
        __sb.Append(Photo);
      }
      if (Stat != null && __isset.stat) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Stat: ");
        __sb.Append(Stat);
      }
      if (ChipStat != null && __isset.chipStat) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ChipStat: ");
        __sb.Append(ChipStat);
      }
      if (OpeUserId != null && __isset.opeUserId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("OpeUserId: ");
        __sb.Append(OpeUserId);
      }
      if (__isset.opeTime) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("OpeTime: ");
        __sb.Append(OpeTime);
      }
      if (CardType != null && __isset.cardType) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CardType: ");
        __sb.Append(CardType);
      }
      if (CardId != null && __isset.cardId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CardId: ");
        __sb.Append(CardId);
      }
      if (Mail != null && __isset.mail) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Mail: ");
        __sb.Append(Mail);
      }
      if (Gender != null && __isset.gender) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Gender: ");
        __sb.Append(Gender);
      }
      if (Tel != null && __isset.tel) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Tel: ");
        __sb.Append(Tel);
      }
      if (__isset.versionNo) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("VersionNo: ");
        __sb.Append(VersionNo);
      }
      if (SysEmpVenuelist != null && __isset.sysEmpVenuelist) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("SysEmpVenuelist: ");
        __sb.Append(SysEmpVenuelist);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
