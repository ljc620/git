/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace tbims.rpc.entity
{

  /// <summary>
  /// 配送申请表
  /// </summary>
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class STR_DELIVERY_APPLY : TBase
  {
    private string _applyUserName;
    private string _examUserId;
    private long _examTime;
    private string _examStat;
    private string _deliveryUserId;
    private long _deliveryTime;
    private List<STR_DELIVERY_APPLY_DETAIL> _strDeliveryApplyDetaillist;
    private List<STR_DELIVERY_DETAIL> _strDeliveryDetailList;

    /// <summary>
    /// 申请编号
    /// </summary>
    public string ApplyId { get; set; }

    /// <summary>
    /// 申请人
    /// </summary>
    public string ApplyUserId { get; set; }

    /// <summary>
    /// 申请人姓名
    /// </summary>
    public string ApplyUserName
    {
      get
      {
        return _applyUserName;
      }
      set
      {
        __isset.applyUserName = true;
        this._applyUserName = value;
      }
    }

    /// <summary>
    /// 申请时间
    /// </summary>
    public long ApplyTime { get; set; }

    /// <summary>
    /// 网点编号
    /// </summary>
    public long OutletId { get; set; }

    /// <summary>
    /// 申请配送时间
    /// </summary>
    public long ApplyDeliveryTime { get; set; }

    /// <summary>
    /// 审核人
    /// </summary>
    public string ExamUserId
    {
      get
      {
        return _examUserId;
      }
      set
      {
        __isset.examUserId = true;
        this._examUserId = value;
      }
    }

    /// <summary>
    /// 审核时间
    /// </summary>
    public long ExamTime
    {
      get
      {
        return _examTime;
      }
      set
      {
        __isset.examTime = true;
        this._examTime = value;
      }
    }

    /// <summary>
    /// 审核状态审核状态(0待审核1已审核2已配送3已接收4已拒收)
    /// </summary>
    public string ExamStat
    {
      get
      {
        return _examStat;
      }
      set
      {
        __isset.examStat = true;
        this._examStat = value;
      }
    }

    /// <summary>
    /// 出库人编号
    /// </summary>
    public string DeliveryUserId
    {
      get
      {
        return _deliveryUserId;
      }
      set
      {
        __isset.deliveryUserId = true;
        this._deliveryUserId = value;
      }
    }

    /// <summary>
    /// 出库时间
    /// </summary>
    public long DeliveryTime
    {
      get
      {
        return _deliveryTime;
      }
      set
      {
        __isset.deliveryTime = true;
        this._deliveryTime = value;
      }
    }

    /// <summary>
    /// 配送申请审核明细表
    /// </summary>
    public List<STR_DELIVERY_APPLY_DETAIL> StrDeliveryApplyDetaillist
    {
      get
      {
        return _strDeliveryApplyDetaillist;
      }
      set
      {
        __isset.strDeliveryApplyDetaillist = true;
        this._strDeliveryApplyDetaillist = value;
      }
    }

    /// <summary>
    /// 配送明细表
    /// </summary>
    public List<STR_DELIVERY_DETAIL> StrDeliveryDetailList
    {
      get
      {
        return _strDeliveryDetailList;
      }
      set
      {
        __isset.strDeliveryDetailList = true;
        this._strDeliveryDetailList = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool applyUserName;
      public bool examUserId;
      public bool examTime;
      public bool examStat;
      public bool deliveryUserId;
      public bool deliveryTime;
      public bool strDeliveryApplyDetaillist;
      public bool strDeliveryDetailList;
    }

    public STR_DELIVERY_APPLY() {
    }

    public STR_DELIVERY_APPLY(string applyId, string applyUserId, long applyTime, long outletId, long applyDeliveryTime) : this() {
      this.ApplyId = applyId;
      this.ApplyUserId = applyUserId;
      this.ApplyTime = applyTime;
      this.OutletId = outletId;
      this.ApplyDeliveryTime = applyDeliveryTime;
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        bool isset_applyId = false;
        bool isset_applyUserId = false;
        bool isset_applyTime = false;
        bool isset_outletId = false;
        bool isset_applyDeliveryTime = false;
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                ApplyId = iprot.ReadString();
                isset_applyId = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                ApplyUserId = iprot.ReadString();
                isset_applyUserId = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.String) {
                ApplyUserName = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.I64) {
                ApplyTime = iprot.ReadI64();
                isset_applyTime = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 5:
              if (field.Type == TType.I64) {
                OutletId = iprot.ReadI64();
                isset_outletId = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 6:
              if (field.Type == TType.I64) {
                ApplyDeliveryTime = iprot.ReadI64();
                isset_applyDeliveryTime = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 7:
              if (field.Type == TType.String) {
                ExamUserId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 8:
              if (field.Type == TType.I64) {
                ExamTime = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 9:
              if (field.Type == TType.String) {
                ExamStat = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 10:
              if (field.Type == TType.String) {
                DeliveryUserId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 11:
              if (field.Type == TType.I64) {
                DeliveryTime = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 12:
              if (field.Type == TType.List) {
                {
                  StrDeliveryApplyDetaillist = new List<STR_DELIVERY_APPLY_DETAIL>();
                  TList _list0 = iprot.ReadListBegin();
                  for( int _i1 = 0; _i1 < _list0.Count; ++_i1)
                  {
                    STR_DELIVERY_APPLY_DETAIL _elem2;
                    _elem2 = new STR_DELIVERY_APPLY_DETAIL();
                    _elem2.Read(iprot);
                    StrDeliveryApplyDetaillist.Add(_elem2);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 13:
              if (field.Type == TType.List) {
                {
                  StrDeliveryDetailList = new List<STR_DELIVERY_DETAIL>();
                  TList _list3 = iprot.ReadListBegin();
                  for( int _i4 = 0; _i4 < _list3.Count; ++_i4)
                  {
                    STR_DELIVERY_DETAIL _elem5;
                    _elem5 = new STR_DELIVERY_DETAIL();
                    _elem5.Read(iprot);
                    StrDeliveryDetailList.Add(_elem5);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
        if (!isset_applyId)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
        if (!isset_applyUserId)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
        if (!isset_applyTime)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
        if (!isset_outletId)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
        if (!isset_applyDeliveryTime)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("STR_DELIVERY_APPLY");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        field.Name = "applyId";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ApplyId);
        oprot.WriteFieldEnd();
        field.Name = "applyUserId";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ApplyUserId);
        oprot.WriteFieldEnd();
        if (ApplyUserName != null && __isset.applyUserName) {
          field.Name = "applyUserName";
          field.Type = TType.String;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(ApplyUserName);
          oprot.WriteFieldEnd();
        }
        field.Name = "applyTime";
        field.Type = TType.I64;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(ApplyTime);
        oprot.WriteFieldEnd();
        field.Name = "outletId";
        field.Type = TType.I64;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(OutletId);
        oprot.WriteFieldEnd();
        field.Name = "applyDeliveryTime";
        field.Type = TType.I64;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(ApplyDeliveryTime);
        oprot.WriteFieldEnd();
        if (ExamUserId != null && __isset.examUserId) {
          field.Name = "examUserId";
          field.Type = TType.String;
          field.ID = 7;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(ExamUserId);
          oprot.WriteFieldEnd();
        }
        if (__isset.examTime) {
          field.Name = "examTime";
          field.Type = TType.I64;
          field.ID = 8;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(ExamTime);
          oprot.WriteFieldEnd();
        }
        if (ExamStat != null && __isset.examStat) {
          field.Name = "examStat";
          field.Type = TType.String;
          field.ID = 9;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(ExamStat);
          oprot.WriteFieldEnd();
        }
        if (DeliveryUserId != null && __isset.deliveryUserId) {
          field.Name = "deliveryUserId";
          field.Type = TType.String;
          field.ID = 10;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(DeliveryUserId);
          oprot.WriteFieldEnd();
        }
        if (__isset.deliveryTime) {
          field.Name = "deliveryTime";
          field.Type = TType.I64;
          field.ID = 11;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(DeliveryTime);
          oprot.WriteFieldEnd();
        }
        if (StrDeliveryApplyDetaillist != null && __isset.strDeliveryApplyDetaillist) {
          field.Name = "strDeliveryApplyDetaillist";
          field.Type = TType.List;
          field.ID = 12;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteListBegin(new TList(TType.Struct, StrDeliveryApplyDetaillist.Count));
            foreach (STR_DELIVERY_APPLY_DETAIL _iter6 in StrDeliveryApplyDetaillist)
            {
              _iter6.Write(oprot);
            }
            oprot.WriteListEnd();
          }
          oprot.WriteFieldEnd();
        }
        if (StrDeliveryDetailList != null && __isset.strDeliveryDetailList) {
          field.Name = "strDeliveryDetailList";
          field.Type = TType.List;
          field.ID = 13;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteListBegin(new TList(TType.Struct, StrDeliveryDetailList.Count));
            foreach (STR_DELIVERY_DETAIL _iter7 in StrDeliveryDetailList)
            {
              _iter7.Write(oprot);
            }
            oprot.WriteListEnd();
          }
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("STR_DELIVERY_APPLY(");
      __sb.Append(", ApplyId: ");
      __sb.Append(ApplyId);
      __sb.Append(", ApplyUserId: ");
      __sb.Append(ApplyUserId);
      if (ApplyUserName != null && __isset.applyUserName) {
        __sb.Append(", ApplyUserName: ");
        __sb.Append(ApplyUserName);
      }
      __sb.Append(", ApplyTime: ");
      __sb.Append(ApplyTime);
      __sb.Append(", OutletId: ");
      __sb.Append(OutletId);
      __sb.Append(", ApplyDeliveryTime: ");
      __sb.Append(ApplyDeliveryTime);
      if (ExamUserId != null && __isset.examUserId) {
        __sb.Append(", ExamUserId: ");
        __sb.Append(ExamUserId);
      }
      if (__isset.examTime) {
        __sb.Append(", ExamTime: ");
        __sb.Append(ExamTime);
      }
      if (ExamStat != null && __isset.examStat) {
        __sb.Append(", ExamStat: ");
        __sb.Append(ExamStat);
      }
      if (DeliveryUserId != null && __isset.deliveryUserId) {
        __sb.Append(", DeliveryUserId: ");
        __sb.Append(DeliveryUserId);
      }
      if (__isset.deliveryTime) {
        __sb.Append(", DeliveryTime: ");
        __sb.Append(DeliveryTime);
      }
      if (StrDeliveryApplyDetaillist != null && __isset.strDeliveryApplyDetaillist) {
        __sb.Append(", StrDeliveryApplyDetaillist: ");
        __sb.Append(StrDeliveryApplyDetaillist);
      }
      if (StrDeliveryDetailList != null && __isset.strDeliveryDetailList) {
        __sb.Append(", StrDeliveryDetailList: ");
        __sb.Append(StrDeliveryDetailList);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
