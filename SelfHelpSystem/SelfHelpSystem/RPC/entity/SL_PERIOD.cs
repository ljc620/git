/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace tbims.rpc.entity
{

  /// <summary>
  /// 预售期表
  /// </summary>
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class SL_PERIOD : TBase
  {
    private long _versionNo;

    /// <summary>
    /// 预售期编号
    /// </summary>
    public string SalePeriodId { get; set; }

    /// <summary>
    /// 票种编号
    /// </summary>
    public string TicketTypeId { get; set; }

    /// <summary>
    /// 预售期名称
    /// </summary>
    public string SalePeriodName { get; set; }

    /// <summary>
    /// 预售期开始日期
    /// </summary>
    public long BeginDt { get; set; }

    /// <summary>
    /// 预售期结束日期
    /// </summary>
    public long EndDt { get; set; }

    /// <summary>
    /// 折后票价（元）
    /// </summary>
    public long DiscountPrice { get; set; }

    /// <summary>
    /// 版本号
    /// </summary>
    public long VersionNo
    {
      get
      {
        return _versionNo;
      }
      set
      {
        __isset.versionNo = true;
        this._versionNo = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool versionNo;
    }

    public SL_PERIOD() {
    }

    public SL_PERIOD(string salePeriodId, string ticketTypeId, string salePeriodName, long beginDt, long endDt, long discountPrice) : this() {
      this.SalePeriodId = salePeriodId;
      this.TicketTypeId = ticketTypeId;
      this.SalePeriodName = salePeriodName;
      this.BeginDt = beginDt;
      this.EndDt = endDt;
      this.DiscountPrice = discountPrice;
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        bool isset_salePeriodId = false;
        bool isset_ticketTypeId = false;
        bool isset_salePeriodName = false;
        bool isset_beginDt = false;
        bool isset_endDt = false;
        bool isset_discountPrice = false;
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                SalePeriodId = iprot.ReadString();
                isset_salePeriodId = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                TicketTypeId = iprot.ReadString();
                isset_ticketTypeId = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.String) {
                SalePeriodName = iprot.ReadString();
                isset_salePeriodName = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.I64) {
                BeginDt = iprot.ReadI64();
                isset_beginDt = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 5:
              if (field.Type == TType.I64) {
                EndDt = iprot.ReadI64();
                isset_endDt = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 6:
              if (field.Type == TType.I64) {
                DiscountPrice = iprot.ReadI64();
                isset_discountPrice = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 7:
              if (field.Type == TType.I64) {
                VersionNo = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
        if (!isset_salePeriodId)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
        if (!isset_ticketTypeId)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
        if (!isset_salePeriodName)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
        if (!isset_beginDt)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
        if (!isset_endDt)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
        if (!isset_discountPrice)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("SL_PERIOD");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        field.Name = "salePeriodId";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(SalePeriodId);
        oprot.WriteFieldEnd();
        field.Name = "ticketTypeId";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(TicketTypeId);
        oprot.WriteFieldEnd();
        field.Name = "salePeriodName";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(SalePeriodName);
        oprot.WriteFieldEnd();
        field.Name = "beginDt";
        field.Type = TType.I64;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(BeginDt);
        oprot.WriteFieldEnd();
        field.Name = "endDt";
        field.Type = TType.I64;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(EndDt);
        oprot.WriteFieldEnd();
        field.Name = "discountPrice";
        field.Type = TType.I64;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(DiscountPrice);
        oprot.WriteFieldEnd();
        if (__isset.versionNo) {
          field.Name = "versionNo";
          field.Type = TType.I64;
          field.ID = 7;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(VersionNo);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("SL_PERIOD(");
      __sb.Append(", SalePeriodId: ");
      __sb.Append(SalePeriodId);
      __sb.Append(", TicketTypeId: ");
      __sb.Append(TicketTypeId);
      __sb.Append(", SalePeriodName: ");
      __sb.Append(SalePeriodName);
      __sb.Append(", BeginDt: ");
      __sb.Append(BeginDt);
      __sb.Append(", EndDt: ");
      __sb.Append(EndDt);
      __sb.Append(", DiscountPrice: ");
      __sb.Append(DiscountPrice);
      if (__isset.versionNo) {
        __sb.Append(", VersionNo: ");
        __sb.Append(VersionNo);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
