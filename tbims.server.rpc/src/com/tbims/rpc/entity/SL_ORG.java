/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.tbims.rpc.entity;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
/**
 * 机构表
 */
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-10-15")
public class SL_ORG implements org.apache.thrift.TBase<SL_ORG, SL_ORG._Fields>, java.io.Serializable, Cloneable, Comparable<SL_ORG> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SL_ORG");

  private static final org.apache.thrift.protocol.TField ORG_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("orgId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("orgName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ORG_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("orgType", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField LOCATION_FIELD_DESC = new org.apache.thrift.protocol.TField("location", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField LEGAL_FIELD_DESC = new org.apache.thrift.protocol.TField("legal", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField CONTACT_FIELD_DESC = new org.apache.thrift.protocol.TField("contact", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField TEL_FIELD_DESC = new org.apache.thrift.protocol.TField("tel", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField CREDIT_AMT_FIELD_DESC = new org.apache.thrift.protocol.TField("creditAmt", org.apache.thrift.protocol.TType.DOUBLE, (short)8);
  private static final org.apache.thrift.protocol.TField ORG_STAT_FIELD_DESC = new org.apache.thrift.protocol.TField("orgStat", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField DEPOSIT_AMT_FIELD_DESC = new org.apache.thrift.protocol.TField("depositAmt", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField ADVANCE_AMT_FIELD_DESC = new org.apache.thrift.protocol.TField("advanceAmt", org.apache.thrift.protocol.TType.I64, (short)11);
  private static final org.apache.thrift.protocol.TField ADVANCE_FROZE_AMT_FIELD_DESC = new org.apache.thrift.protocol.TField("advanceFrozeAmt", org.apache.thrift.protocol.TType.I64, (short)12);
  private static final org.apache.thrift.protocol.TField OPE_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("opeUserId", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField OPE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("opeTime", org.apache.thrift.protocol.TType.I64, (short)14);
  private static final org.apache.thrift.protocol.TField VERSION_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("versionNo", org.apache.thrift.protocol.TType.I64, (short)15);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SL_ORGStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SL_ORGTupleSchemeFactory();

  /**
   * 组织机构代码
   */
  public java.lang.String orgId; // required
  /**
   * 机构名称
   */
  public java.lang.String orgName; // required
  /**
   * 机构类型(0签约社1网络代理商2实体代理商)
   */
  public java.lang.String orgType; // required
  /**
   * 地址
   */
  public java.lang.String location; // optional
  /**
   * 法人代表
   */
  public java.lang.String legal; // optional
  /**
   * 联系人
   */
  public java.lang.String contact; // optional
  /**
   * 联系电话
   */
  public java.lang.String tel; // optional
  /**
   * 信用额度
   */
  public double creditAmt; // optional
  /**
   * 机构状态(Y正常N停用)
   */
  public java.lang.String orgStat; // required
  /**
   * 保证金
   */
  public long depositAmt; // optional
  /**
   * 预付款余额
   */
  public long advanceAmt; // optional
  /**
   * 预付款冻结金额
   */
  public long advanceFrozeAmt; // optional
  /**
   * 操作人
   */
  public java.lang.String opeUserId; // optional
  /**
   * 操作时间
   */
  public long opeTime; // optional
  /**
   * 版本号
   */
  public long versionNo; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 组织机构代码
     */
    ORG_ID((short)1, "orgId"),
    /**
     * 机构名称
     */
    ORG_NAME((short)2, "orgName"),
    /**
     * 机构类型(0签约社1网络代理商2实体代理商)
     */
    ORG_TYPE((short)3, "orgType"),
    /**
     * 地址
     */
    LOCATION((short)4, "location"),
    /**
     * 法人代表
     */
    LEGAL((short)5, "legal"),
    /**
     * 联系人
     */
    CONTACT((short)6, "contact"),
    /**
     * 联系电话
     */
    TEL((short)7, "tel"),
    /**
     * 信用额度
     */
    CREDIT_AMT((short)8, "creditAmt"),
    /**
     * 机构状态(Y正常N停用)
     */
    ORG_STAT((short)9, "orgStat"),
    /**
     * 保证金
     */
    DEPOSIT_AMT((short)10, "depositAmt"),
    /**
     * 预付款余额
     */
    ADVANCE_AMT((short)11, "advanceAmt"),
    /**
     * 预付款冻结金额
     */
    ADVANCE_FROZE_AMT((short)12, "advanceFrozeAmt"),
    /**
     * 操作人
     */
    OPE_USER_ID((short)13, "opeUserId"),
    /**
     * 操作时间
     */
    OPE_TIME((short)14, "opeTime"),
    /**
     * 版本号
     */
    VERSION_NO((short)15, "versionNo");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ORG_ID
          return ORG_ID;
        case 2: // ORG_NAME
          return ORG_NAME;
        case 3: // ORG_TYPE
          return ORG_TYPE;
        case 4: // LOCATION
          return LOCATION;
        case 5: // LEGAL
          return LEGAL;
        case 6: // CONTACT
          return CONTACT;
        case 7: // TEL
          return TEL;
        case 8: // CREDIT_AMT
          return CREDIT_AMT;
        case 9: // ORG_STAT
          return ORG_STAT;
        case 10: // DEPOSIT_AMT
          return DEPOSIT_AMT;
        case 11: // ADVANCE_AMT
          return ADVANCE_AMT;
        case 12: // ADVANCE_FROZE_AMT
          return ADVANCE_FROZE_AMT;
        case 13: // OPE_USER_ID
          return OPE_USER_ID;
        case 14: // OPE_TIME
          return OPE_TIME;
        case 15: // VERSION_NO
          return VERSION_NO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CREDITAMT_ISSET_ID = 0;
  private static final int __DEPOSITAMT_ISSET_ID = 1;
  private static final int __ADVANCEAMT_ISSET_ID = 2;
  private static final int __ADVANCEFROZEAMT_ISSET_ID = 3;
  private static final int __OPETIME_ISSET_ID = 4;
  private static final int __VERSIONNO_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.LOCATION,_Fields.LEGAL,_Fields.CONTACT,_Fields.TEL,_Fields.CREDIT_AMT,_Fields.DEPOSIT_AMT,_Fields.ADVANCE_AMT,_Fields.ADVANCE_FROZE_AMT,_Fields.OPE_USER_ID,_Fields.OPE_TIME,_Fields.VERSION_NO};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ORG_ID, new org.apache.thrift.meta_data.FieldMetaData("orgId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("orgName", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_TYPE, new org.apache.thrift.meta_data.FieldMetaData("orgType", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOCATION, new org.apache.thrift.meta_data.FieldMetaData("location", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LEGAL, new org.apache.thrift.meta_data.FieldMetaData("legal", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACT, new org.apache.thrift.meta_data.FieldMetaData("contact", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TEL, new org.apache.thrift.meta_data.FieldMetaData("tel", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREDIT_AMT, new org.apache.thrift.meta_data.FieldMetaData("creditAmt", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ORG_STAT, new org.apache.thrift.meta_data.FieldMetaData("orgStat", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEPOSIT_AMT, new org.apache.thrift.meta_data.FieldMetaData("depositAmt", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ADVANCE_AMT, new org.apache.thrift.meta_data.FieldMetaData("advanceAmt", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ADVANCE_FROZE_AMT, new org.apache.thrift.meta_data.FieldMetaData("advanceFrozeAmt", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.OPE_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("opeUserId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OPE_TIME, new org.apache.thrift.meta_data.FieldMetaData("opeTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.VERSION_NO, new org.apache.thrift.meta_data.FieldMetaData("versionNo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SL_ORG.class, metaDataMap);
  }

  public SL_ORG() {
  }

  public SL_ORG(
    java.lang.String orgId,
    java.lang.String orgName,
    java.lang.String orgType,
    java.lang.String orgStat)
  {
    this();
    this.orgId = orgId;
    this.orgName = orgName;
    this.orgType = orgType;
    this.orgStat = orgStat;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SL_ORG(SL_ORG other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetOrgId()) {
      this.orgId = other.orgId;
    }
    if (other.isSetOrgName()) {
      this.orgName = other.orgName;
    }
    if (other.isSetOrgType()) {
      this.orgType = other.orgType;
    }
    if (other.isSetLocation()) {
      this.location = other.location;
    }
    if (other.isSetLegal()) {
      this.legal = other.legal;
    }
    if (other.isSetContact()) {
      this.contact = other.contact;
    }
    if (other.isSetTel()) {
      this.tel = other.tel;
    }
    this.creditAmt = other.creditAmt;
    if (other.isSetOrgStat()) {
      this.orgStat = other.orgStat;
    }
    this.depositAmt = other.depositAmt;
    this.advanceAmt = other.advanceAmt;
    this.advanceFrozeAmt = other.advanceFrozeAmt;
    if (other.isSetOpeUserId()) {
      this.opeUserId = other.opeUserId;
    }
    this.opeTime = other.opeTime;
    this.versionNo = other.versionNo;
  }

  public SL_ORG deepCopy() {
    return new SL_ORG(this);
  }

  @Override
  public void clear() {
    this.orgId = null;
    this.orgName = null;
    this.orgType = null;
    this.location = null;
    this.legal = null;
    this.contact = null;
    this.tel = null;
    setCreditAmtIsSet(false);
    this.creditAmt = 0.0;
    this.orgStat = null;
    setDepositAmtIsSet(false);
    this.depositAmt = 0;
    setAdvanceAmtIsSet(false);
    this.advanceAmt = 0;
    setAdvanceFrozeAmtIsSet(false);
    this.advanceFrozeAmt = 0;
    this.opeUserId = null;
    setOpeTimeIsSet(false);
    this.opeTime = 0;
    setVersionNoIsSet(false);
    this.versionNo = 0;
  }

  /**
   * 组织机构代码
   */
  public java.lang.String getOrgId() {
    return this.orgId;
  }

  /**
   * 组织机构代码
   */
  public SL_ORG setOrgId(java.lang.String orgId) {
    this.orgId = orgId;
    return this;
  }

  public void unsetOrgId() {
    this.orgId = null;
  }

  /** Returns true if field orgId is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgId() {
    return this.orgId != null;
  }

  public void setOrgIdIsSet(boolean value) {
    if (!value) {
      this.orgId = null;
    }
  }

  /**
   * 机构名称
   */
  public java.lang.String getOrgName() {
    return this.orgName;
  }

  /**
   * 机构名称
   */
  public SL_ORG setOrgName(java.lang.String orgName) {
    this.orgName = orgName;
    return this;
  }

  public void unsetOrgName() {
    this.orgName = null;
  }

  /** Returns true if field orgName is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgName() {
    return this.orgName != null;
  }

  public void setOrgNameIsSet(boolean value) {
    if (!value) {
      this.orgName = null;
    }
  }

  /**
   * 机构类型(0签约社1网络代理商2实体代理商)
   */
  public java.lang.String getOrgType() {
    return this.orgType;
  }

  /**
   * 机构类型(0签约社1网络代理商2实体代理商)
   */
  public SL_ORG setOrgType(java.lang.String orgType) {
    this.orgType = orgType;
    return this;
  }

  public void unsetOrgType() {
    this.orgType = null;
  }

  /** Returns true if field orgType is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgType() {
    return this.orgType != null;
  }

  public void setOrgTypeIsSet(boolean value) {
    if (!value) {
      this.orgType = null;
    }
  }

  /**
   * 地址
   */
  public java.lang.String getLocation() {
    return this.location;
  }

  /**
   * 地址
   */
  public SL_ORG setLocation(java.lang.String location) {
    this.location = location;
    return this;
  }

  public void unsetLocation() {
    this.location = null;
  }

  /** Returns true if field location is set (has been assigned a value) and false otherwise */
  public boolean isSetLocation() {
    return this.location != null;
  }

  public void setLocationIsSet(boolean value) {
    if (!value) {
      this.location = null;
    }
  }

  /**
   * 法人代表
   */
  public java.lang.String getLegal() {
    return this.legal;
  }

  /**
   * 法人代表
   */
  public SL_ORG setLegal(java.lang.String legal) {
    this.legal = legal;
    return this;
  }

  public void unsetLegal() {
    this.legal = null;
  }

  /** Returns true if field legal is set (has been assigned a value) and false otherwise */
  public boolean isSetLegal() {
    return this.legal != null;
  }

  public void setLegalIsSet(boolean value) {
    if (!value) {
      this.legal = null;
    }
  }

  /**
   * 联系人
   */
  public java.lang.String getContact() {
    return this.contact;
  }

  /**
   * 联系人
   */
  public SL_ORG setContact(java.lang.String contact) {
    this.contact = contact;
    return this;
  }

  public void unsetContact() {
    this.contact = null;
  }

  /** Returns true if field contact is set (has been assigned a value) and false otherwise */
  public boolean isSetContact() {
    return this.contact != null;
  }

  public void setContactIsSet(boolean value) {
    if (!value) {
      this.contact = null;
    }
  }

  /**
   * 联系电话
   */
  public java.lang.String getTel() {
    return this.tel;
  }

  /**
   * 联系电话
   */
  public SL_ORG setTel(java.lang.String tel) {
    this.tel = tel;
    return this;
  }

  public void unsetTel() {
    this.tel = null;
  }

  /** Returns true if field tel is set (has been assigned a value) and false otherwise */
  public boolean isSetTel() {
    return this.tel != null;
  }

  public void setTelIsSet(boolean value) {
    if (!value) {
      this.tel = null;
    }
  }

  /**
   * 信用额度
   */
  public double getCreditAmt() {
    return this.creditAmt;
  }

  /**
   * 信用额度
   */
  public SL_ORG setCreditAmt(double creditAmt) {
    this.creditAmt = creditAmt;
    setCreditAmtIsSet(true);
    return this;
  }

  public void unsetCreditAmt() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CREDITAMT_ISSET_ID);
  }

  /** Returns true if field creditAmt is set (has been assigned a value) and false otherwise */
  public boolean isSetCreditAmt() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CREDITAMT_ISSET_ID);
  }

  public void setCreditAmtIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CREDITAMT_ISSET_ID, value);
  }

  /**
   * 机构状态(Y正常N停用)
   */
  public java.lang.String getOrgStat() {
    return this.orgStat;
  }

  /**
   * 机构状态(Y正常N停用)
   */
  public SL_ORG setOrgStat(java.lang.String orgStat) {
    this.orgStat = orgStat;
    return this;
  }

  public void unsetOrgStat() {
    this.orgStat = null;
  }

  /** Returns true if field orgStat is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgStat() {
    return this.orgStat != null;
  }

  public void setOrgStatIsSet(boolean value) {
    if (!value) {
      this.orgStat = null;
    }
  }

  /**
   * 保证金
   */
  public long getDepositAmt() {
    return this.depositAmt;
  }

  /**
   * 保证金
   */
  public SL_ORG setDepositAmt(long depositAmt) {
    this.depositAmt = depositAmt;
    setDepositAmtIsSet(true);
    return this;
  }

  public void unsetDepositAmt() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DEPOSITAMT_ISSET_ID);
  }

  /** Returns true if field depositAmt is set (has been assigned a value) and false otherwise */
  public boolean isSetDepositAmt() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DEPOSITAMT_ISSET_ID);
  }

  public void setDepositAmtIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DEPOSITAMT_ISSET_ID, value);
  }

  /**
   * 预付款余额
   */
  public long getAdvanceAmt() {
    return this.advanceAmt;
  }

  /**
   * 预付款余额
   */
  public SL_ORG setAdvanceAmt(long advanceAmt) {
    this.advanceAmt = advanceAmt;
    setAdvanceAmtIsSet(true);
    return this;
  }

  public void unsetAdvanceAmt() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ADVANCEAMT_ISSET_ID);
  }

  /** Returns true if field advanceAmt is set (has been assigned a value) and false otherwise */
  public boolean isSetAdvanceAmt() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ADVANCEAMT_ISSET_ID);
  }

  public void setAdvanceAmtIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ADVANCEAMT_ISSET_ID, value);
  }

  /**
   * 预付款冻结金额
   */
  public long getAdvanceFrozeAmt() {
    return this.advanceFrozeAmt;
  }

  /**
   * 预付款冻结金额
   */
  public SL_ORG setAdvanceFrozeAmt(long advanceFrozeAmt) {
    this.advanceFrozeAmt = advanceFrozeAmt;
    setAdvanceFrozeAmtIsSet(true);
    return this;
  }

  public void unsetAdvanceFrozeAmt() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ADVANCEFROZEAMT_ISSET_ID);
  }

  /** Returns true if field advanceFrozeAmt is set (has been assigned a value) and false otherwise */
  public boolean isSetAdvanceFrozeAmt() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ADVANCEFROZEAMT_ISSET_ID);
  }

  public void setAdvanceFrozeAmtIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ADVANCEFROZEAMT_ISSET_ID, value);
  }

  /**
   * 操作人
   */
  public java.lang.String getOpeUserId() {
    return this.opeUserId;
  }

  /**
   * 操作人
   */
  public SL_ORG setOpeUserId(java.lang.String opeUserId) {
    this.opeUserId = opeUserId;
    return this;
  }

  public void unsetOpeUserId() {
    this.opeUserId = null;
  }

  /** Returns true if field opeUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetOpeUserId() {
    return this.opeUserId != null;
  }

  public void setOpeUserIdIsSet(boolean value) {
    if (!value) {
      this.opeUserId = null;
    }
  }

  /**
   * 操作时间
   */
  public long getOpeTime() {
    return this.opeTime;
  }

  /**
   * 操作时间
   */
  public SL_ORG setOpeTime(long opeTime) {
    this.opeTime = opeTime;
    setOpeTimeIsSet(true);
    return this;
  }

  public void unsetOpeTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OPETIME_ISSET_ID);
  }

  /** Returns true if field opeTime is set (has been assigned a value) and false otherwise */
  public boolean isSetOpeTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OPETIME_ISSET_ID);
  }

  public void setOpeTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OPETIME_ISSET_ID, value);
  }

  /**
   * 版本号
   */
  public long getVersionNo() {
    return this.versionNo;
  }

  /**
   * 版本号
   */
  public SL_ORG setVersionNo(long versionNo) {
    this.versionNo = versionNo;
    setVersionNoIsSet(true);
    return this;
  }

  public void unsetVersionNo() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __VERSIONNO_ISSET_ID);
  }

  /** Returns true if field versionNo is set (has been assigned a value) and false otherwise */
  public boolean isSetVersionNo() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __VERSIONNO_ISSET_ID);
  }

  public void setVersionNoIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __VERSIONNO_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ORG_ID:
      if (value == null) {
        unsetOrgId();
      } else {
        setOrgId((java.lang.String)value);
      }
      break;

    case ORG_NAME:
      if (value == null) {
        unsetOrgName();
      } else {
        setOrgName((java.lang.String)value);
      }
      break;

    case ORG_TYPE:
      if (value == null) {
        unsetOrgType();
      } else {
        setOrgType((java.lang.String)value);
      }
      break;

    case LOCATION:
      if (value == null) {
        unsetLocation();
      } else {
        setLocation((java.lang.String)value);
      }
      break;

    case LEGAL:
      if (value == null) {
        unsetLegal();
      } else {
        setLegal((java.lang.String)value);
      }
      break;

    case CONTACT:
      if (value == null) {
        unsetContact();
      } else {
        setContact((java.lang.String)value);
      }
      break;

    case TEL:
      if (value == null) {
        unsetTel();
      } else {
        setTel((java.lang.String)value);
      }
      break;

    case CREDIT_AMT:
      if (value == null) {
        unsetCreditAmt();
      } else {
        setCreditAmt((java.lang.Double)value);
      }
      break;

    case ORG_STAT:
      if (value == null) {
        unsetOrgStat();
      } else {
        setOrgStat((java.lang.String)value);
      }
      break;

    case DEPOSIT_AMT:
      if (value == null) {
        unsetDepositAmt();
      } else {
        setDepositAmt((java.lang.Long)value);
      }
      break;

    case ADVANCE_AMT:
      if (value == null) {
        unsetAdvanceAmt();
      } else {
        setAdvanceAmt((java.lang.Long)value);
      }
      break;

    case ADVANCE_FROZE_AMT:
      if (value == null) {
        unsetAdvanceFrozeAmt();
      } else {
        setAdvanceFrozeAmt((java.lang.Long)value);
      }
      break;

    case OPE_USER_ID:
      if (value == null) {
        unsetOpeUserId();
      } else {
        setOpeUserId((java.lang.String)value);
      }
      break;

    case OPE_TIME:
      if (value == null) {
        unsetOpeTime();
      } else {
        setOpeTime((java.lang.Long)value);
      }
      break;

    case VERSION_NO:
      if (value == null) {
        unsetVersionNo();
      } else {
        setVersionNo((java.lang.Long)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ORG_ID:
      return getOrgId();

    case ORG_NAME:
      return getOrgName();

    case ORG_TYPE:
      return getOrgType();

    case LOCATION:
      return getLocation();

    case LEGAL:
      return getLegal();

    case CONTACT:
      return getContact();

    case TEL:
      return getTel();

    case CREDIT_AMT:
      return getCreditAmt();

    case ORG_STAT:
      return getOrgStat();

    case DEPOSIT_AMT:
      return getDepositAmt();

    case ADVANCE_AMT:
      return getAdvanceAmt();

    case ADVANCE_FROZE_AMT:
      return getAdvanceFrozeAmt();

    case OPE_USER_ID:
      return getOpeUserId();

    case OPE_TIME:
      return getOpeTime();

    case VERSION_NO:
      return getVersionNo();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ORG_ID:
      return isSetOrgId();
    case ORG_NAME:
      return isSetOrgName();
    case ORG_TYPE:
      return isSetOrgType();
    case LOCATION:
      return isSetLocation();
    case LEGAL:
      return isSetLegal();
    case CONTACT:
      return isSetContact();
    case TEL:
      return isSetTel();
    case CREDIT_AMT:
      return isSetCreditAmt();
    case ORG_STAT:
      return isSetOrgStat();
    case DEPOSIT_AMT:
      return isSetDepositAmt();
    case ADVANCE_AMT:
      return isSetAdvanceAmt();
    case ADVANCE_FROZE_AMT:
      return isSetAdvanceFrozeAmt();
    case OPE_USER_ID:
      return isSetOpeUserId();
    case OPE_TIME:
      return isSetOpeTime();
    case VERSION_NO:
      return isSetVersionNo();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof SL_ORG)
      return this.equals((SL_ORG)that);
    return false;
  }

  public boolean equals(SL_ORG that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_orgId = true && this.isSetOrgId();
    boolean that_present_orgId = true && that.isSetOrgId();
    if (this_present_orgId || that_present_orgId) {
      if (!(this_present_orgId && that_present_orgId))
        return false;
      if (!this.orgId.equals(that.orgId))
        return false;
    }

    boolean this_present_orgName = true && this.isSetOrgName();
    boolean that_present_orgName = true && that.isSetOrgName();
    if (this_present_orgName || that_present_orgName) {
      if (!(this_present_orgName && that_present_orgName))
        return false;
      if (!this.orgName.equals(that.orgName))
        return false;
    }

    boolean this_present_orgType = true && this.isSetOrgType();
    boolean that_present_orgType = true && that.isSetOrgType();
    if (this_present_orgType || that_present_orgType) {
      if (!(this_present_orgType && that_present_orgType))
        return false;
      if (!this.orgType.equals(that.orgType))
        return false;
    }

    boolean this_present_location = true && this.isSetLocation();
    boolean that_present_location = true && that.isSetLocation();
    if (this_present_location || that_present_location) {
      if (!(this_present_location && that_present_location))
        return false;
      if (!this.location.equals(that.location))
        return false;
    }

    boolean this_present_legal = true && this.isSetLegal();
    boolean that_present_legal = true && that.isSetLegal();
    if (this_present_legal || that_present_legal) {
      if (!(this_present_legal && that_present_legal))
        return false;
      if (!this.legal.equals(that.legal))
        return false;
    }

    boolean this_present_contact = true && this.isSetContact();
    boolean that_present_contact = true && that.isSetContact();
    if (this_present_contact || that_present_contact) {
      if (!(this_present_contact && that_present_contact))
        return false;
      if (!this.contact.equals(that.contact))
        return false;
    }

    boolean this_present_tel = true && this.isSetTel();
    boolean that_present_tel = true && that.isSetTel();
    if (this_present_tel || that_present_tel) {
      if (!(this_present_tel && that_present_tel))
        return false;
      if (!this.tel.equals(that.tel))
        return false;
    }

    boolean this_present_creditAmt = true && this.isSetCreditAmt();
    boolean that_present_creditAmt = true && that.isSetCreditAmt();
    if (this_present_creditAmt || that_present_creditAmt) {
      if (!(this_present_creditAmt && that_present_creditAmt))
        return false;
      if (this.creditAmt != that.creditAmt)
        return false;
    }

    boolean this_present_orgStat = true && this.isSetOrgStat();
    boolean that_present_orgStat = true && that.isSetOrgStat();
    if (this_present_orgStat || that_present_orgStat) {
      if (!(this_present_orgStat && that_present_orgStat))
        return false;
      if (!this.orgStat.equals(that.orgStat))
        return false;
    }

    boolean this_present_depositAmt = true && this.isSetDepositAmt();
    boolean that_present_depositAmt = true && that.isSetDepositAmt();
    if (this_present_depositAmt || that_present_depositAmt) {
      if (!(this_present_depositAmt && that_present_depositAmt))
        return false;
      if (this.depositAmt != that.depositAmt)
        return false;
    }

    boolean this_present_advanceAmt = true && this.isSetAdvanceAmt();
    boolean that_present_advanceAmt = true && that.isSetAdvanceAmt();
    if (this_present_advanceAmt || that_present_advanceAmt) {
      if (!(this_present_advanceAmt && that_present_advanceAmt))
        return false;
      if (this.advanceAmt != that.advanceAmt)
        return false;
    }

    boolean this_present_advanceFrozeAmt = true && this.isSetAdvanceFrozeAmt();
    boolean that_present_advanceFrozeAmt = true && that.isSetAdvanceFrozeAmt();
    if (this_present_advanceFrozeAmt || that_present_advanceFrozeAmt) {
      if (!(this_present_advanceFrozeAmt && that_present_advanceFrozeAmt))
        return false;
      if (this.advanceFrozeAmt != that.advanceFrozeAmt)
        return false;
    }

    boolean this_present_opeUserId = true && this.isSetOpeUserId();
    boolean that_present_opeUserId = true && that.isSetOpeUserId();
    if (this_present_opeUserId || that_present_opeUserId) {
      if (!(this_present_opeUserId && that_present_opeUserId))
        return false;
      if (!this.opeUserId.equals(that.opeUserId))
        return false;
    }

    boolean this_present_opeTime = true && this.isSetOpeTime();
    boolean that_present_opeTime = true && that.isSetOpeTime();
    if (this_present_opeTime || that_present_opeTime) {
      if (!(this_present_opeTime && that_present_opeTime))
        return false;
      if (this.opeTime != that.opeTime)
        return false;
    }

    boolean this_present_versionNo = true && this.isSetVersionNo();
    boolean that_present_versionNo = true && that.isSetVersionNo();
    if (this_present_versionNo || that_present_versionNo) {
      if (!(this_present_versionNo && that_present_versionNo))
        return false;
      if (this.versionNo != that.versionNo)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetOrgId()) ? 131071 : 524287);
    if (isSetOrgId())
      hashCode = hashCode * 8191 + orgId.hashCode();

    hashCode = hashCode * 8191 + ((isSetOrgName()) ? 131071 : 524287);
    if (isSetOrgName())
      hashCode = hashCode * 8191 + orgName.hashCode();

    hashCode = hashCode * 8191 + ((isSetOrgType()) ? 131071 : 524287);
    if (isSetOrgType())
      hashCode = hashCode * 8191 + orgType.hashCode();

    hashCode = hashCode * 8191 + ((isSetLocation()) ? 131071 : 524287);
    if (isSetLocation())
      hashCode = hashCode * 8191 + location.hashCode();

    hashCode = hashCode * 8191 + ((isSetLegal()) ? 131071 : 524287);
    if (isSetLegal())
      hashCode = hashCode * 8191 + legal.hashCode();

    hashCode = hashCode * 8191 + ((isSetContact()) ? 131071 : 524287);
    if (isSetContact())
      hashCode = hashCode * 8191 + contact.hashCode();

    hashCode = hashCode * 8191 + ((isSetTel()) ? 131071 : 524287);
    if (isSetTel())
      hashCode = hashCode * 8191 + tel.hashCode();

    hashCode = hashCode * 8191 + ((isSetCreditAmt()) ? 131071 : 524287);
    if (isSetCreditAmt())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(creditAmt);

    hashCode = hashCode * 8191 + ((isSetOrgStat()) ? 131071 : 524287);
    if (isSetOrgStat())
      hashCode = hashCode * 8191 + orgStat.hashCode();

    hashCode = hashCode * 8191 + ((isSetDepositAmt()) ? 131071 : 524287);
    if (isSetDepositAmt())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(depositAmt);

    hashCode = hashCode * 8191 + ((isSetAdvanceAmt()) ? 131071 : 524287);
    if (isSetAdvanceAmt())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(advanceAmt);

    hashCode = hashCode * 8191 + ((isSetAdvanceFrozeAmt()) ? 131071 : 524287);
    if (isSetAdvanceFrozeAmt())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(advanceFrozeAmt);

    hashCode = hashCode * 8191 + ((isSetOpeUserId()) ? 131071 : 524287);
    if (isSetOpeUserId())
      hashCode = hashCode * 8191 + opeUserId.hashCode();

    hashCode = hashCode * 8191 + ((isSetOpeTime()) ? 131071 : 524287);
    if (isSetOpeTime())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(opeTime);

    hashCode = hashCode * 8191 + ((isSetVersionNo()) ? 131071 : 524287);
    if (isSetVersionNo())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(versionNo);

    return hashCode;
  }

  @Override
  public int compareTo(SL_ORG other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetOrgId()).compareTo(other.isSetOrgId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgId, other.orgId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOrgName()).compareTo(other.isSetOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgName, other.orgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOrgType()).compareTo(other.isSetOrgType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgType, other.orgType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLocation()).compareTo(other.isSetLocation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLocation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.location, other.location);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLegal()).compareTo(other.isSetLegal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLegal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.legal, other.legal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetContact()).compareTo(other.isSetContact());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContact()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contact, other.contact);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTel()).compareTo(other.isSetTel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tel, other.tel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreditAmt()).compareTo(other.isSetCreditAmt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreditAmt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.creditAmt, other.creditAmt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOrgStat()).compareTo(other.isSetOrgStat());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgStat()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgStat, other.orgStat);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDepositAmt()).compareTo(other.isSetDepositAmt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDepositAmt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.depositAmt, other.depositAmt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAdvanceAmt()).compareTo(other.isSetAdvanceAmt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdvanceAmt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.advanceAmt, other.advanceAmt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAdvanceFrozeAmt()).compareTo(other.isSetAdvanceFrozeAmt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdvanceFrozeAmt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.advanceFrozeAmt, other.advanceFrozeAmt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOpeUserId()).compareTo(other.isSetOpeUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOpeUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.opeUserId, other.opeUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOpeTime()).compareTo(other.isSetOpeTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOpeTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.opeTime, other.opeTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetVersionNo()).compareTo(other.isSetVersionNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVersionNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.versionNo, other.versionNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SL_ORG(");
    boolean first = true;

    sb.append("orgId:");
    if (this.orgId == null) {
      sb.append("null");
    } else {
      sb.append(this.orgId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgName:");
    if (this.orgName == null) {
      sb.append("null");
    } else {
      sb.append(this.orgName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orgType:");
    if (this.orgType == null) {
      sb.append("null");
    } else {
      sb.append(this.orgType);
    }
    first = false;
    if (isSetLocation()) {
      if (!first) sb.append(", ");
      sb.append("location:");
      if (this.location == null) {
        sb.append("null");
      } else {
        sb.append(this.location);
      }
      first = false;
    }
    if (isSetLegal()) {
      if (!first) sb.append(", ");
      sb.append("legal:");
      if (this.legal == null) {
        sb.append("null");
      } else {
        sb.append(this.legal);
      }
      first = false;
    }
    if (isSetContact()) {
      if (!first) sb.append(", ");
      sb.append("contact:");
      if (this.contact == null) {
        sb.append("null");
      } else {
        sb.append(this.contact);
      }
      first = false;
    }
    if (isSetTel()) {
      if (!first) sb.append(", ");
      sb.append("tel:");
      if (this.tel == null) {
        sb.append("null");
      } else {
        sb.append(this.tel);
      }
      first = false;
    }
    if (isSetCreditAmt()) {
      if (!first) sb.append(", ");
      sb.append("creditAmt:");
      sb.append(this.creditAmt);
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("orgStat:");
    if (this.orgStat == null) {
      sb.append("null");
    } else {
      sb.append(this.orgStat);
    }
    first = false;
    if (isSetDepositAmt()) {
      if (!first) sb.append(", ");
      sb.append("depositAmt:");
      sb.append(this.depositAmt);
      first = false;
    }
    if (isSetAdvanceAmt()) {
      if (!first) sb.append(", ");
      sb.append("advanceAmt:");
      sb.append(this.advanceAmt);
      first = false;
    }
    if (isSetAdvanceFrozeAmt()) {
      if (!first) sb.append(", ");
      sb.append("advanceFrozeAmt:");
      sb.append(this.advanceFrozeAmt);
      first = false;
    }
    if (isSetOpeUserId()) {
      if (!first) sb.append(", ");
      sb.append("opeUserId:");
      if (this.opeUserId == null) {
        sb.append("null");
      } else {
        sb.append(this.opeUserId);
      }
      first = false;
    }
    if (isSetOpeTime()) {
      if (!first) sb.append(", ");
      sb.append("opeTime:");
      sb.append(this.opeTime);
      first = false;
    }
    if (isSetVersionNo()) {
      if (!first) sb.append(", ");
      sb.append("versionNo:");
      sb.append(this.versionNo);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (orgId == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'orgId' was not present! Struct: " + toString());
    }
    if (orgName == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'orgName' was not present! Struct: " + toString());
    }
    if (orgType == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'orgType' was not present! Struct: " + toString());
    }
    if (orgStat == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'orgStat' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SL_ORGStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SL_ORGStandardScheme getScheme() {
      return new SL_ORGStandardScheme();
    }
  }

  private static class SL_ORGStandardScheme extends org.apache.thrift.scheme.StandardScheme<SL_ORG> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SL_ORG struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ORG_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgId = iprot.readString();
              struct.setOrgIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgName = iprot.readString();
              struct.setOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ORG_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgType = iprot.readString();
              struct.setOrgTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // LOCATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.location = iprot.readString();
              struct.setLocationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // LEGAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.legal = iprot.readString();
              struct.setLegalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CONTACT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contact = iprot.readString();
              struct.setContactIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // TEL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.tel = iprot.readString();
              struct.setTelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CREDIT_AMT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.creditAmt = iprot.readDouble();
              struct.setCreditAmtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // ORG_STAT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgStat = iprot.readString();
              struct.setOrgStatIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // DEPOSIT_AMT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.depositAmt = iprot.readI64();
              struct.setDepositAmtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // ADVANCE_AMT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.advanceAmt = iprot.readI64();
              struct.setAdvanceAmtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // ADVANCE_FROZE_AMT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.advanceFrozeAmt = iprot.readI64();
              struct.setAdvanceFrozeAmtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // OPE_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.opeUserId = iprot.readString();
              struct.setOpeUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // OPE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.opeTime = iprot.readI64();
              struct.setOpeTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // VERSION_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.versionNo = iprot.readI64();
              struct.setVersionNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SL_ORG struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.orgId != null) {
        oprot.writeFieldBegin(ORG_ID_FIELD_DESC);
        oprot.writeString(struct.orgId);
        oprot.writeFieldEnd();
      }
      if (struct.orgName != null) {
        oprot.writeFieldBegin(ORG_NAME_FIELD_DESC);
        oprot.writeString(struct.orgName);
        oprot.writeFieldEnd();
      }
      if (struct.orgType != null) {
        oprot.writeFieldBegin(ORG_TYPE_FIELD_DESC);
        oprot.writeString(struct.orgType);
        oprot.writeFieldEnd();
      }
      if (struct.location != null) {
        if (struct.isSetLocation()) {
          oprot.writeFieldBegin(LOCATION_FIELD_DESC);
          oprot.writeString(struct.location);
          oprot.writeFieldEnd();
        }
      }
      if (struct.legal != null) {
        if (struct.isSetLegal()) {
          oprot.writeFieldBegin(LEGAL_FIELD_DESC);
          oprot.writeString(struct.legal);
          oprot.writeFieldEnd();
        }
      }
      if (struct.contact != null) {
        if (struct.isSetContact()) {
          oprot.writeFieldBegin(CONTACT_FIELD_DESC);
          oprot.writeString(struct.contact);
          oprot.writeFieldEnd();
        }
      }
      if (struct.tel != null) {
        if (struct.isSetTel()) {
          oprot.writeFieldBegin(TEL_FIELD_DESC);
          oprot.writeString(struct.tel);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCreditAmt()) {
        oprot.writeFieldBegin(CREDIT_AMT_FIELD_DESC);
        oprot.writeDouble(struct.creditAmt);
        oprot.writeFieldEnd();
      }
      if (struct.orgStat != null) {
        oprot.writeFieldBegin(ORG_STAT_FIELD_DESC);
        oprot.writeString(struct.orgStat);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDepositAmt()) {
        oprot.writeFieldBegin(DEPOSIT_AMT_FIELD_DESC);
        oprot.writeI64(struct.depositAmt);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAdvanceAmt()) {
        oprot.writeFieldBegin(ADVANCE_AMT_FIELD_DESC);
        oprot.writeI64(struct.advanceAmt);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAdvanceFrozeAmt()) {
        oprot.writeFieldBegin(ADVANCE_FROZE_AMT_FIELD_DESC);
        oprot.writeI64(struct.advanceFrozeAmt);
        oprot.writeFieldEnd();
      }
      if (struct.opeUserId != null) {
        if (struct.isSetOpeUserId()) {
          oprot.writeFieldBegin(OPE_USER_ID_FIELD_DESC);
          oprot.writeString(struct.opeUserId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetOpeTime()) {
        oprot.writeFieldBegin(OPE_TIME_FIELD_DESC);
        oprot.writeI64(struct.opeTime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetVersionNo()) {
        oprot.writeFieldBegin(VERSION_NO_FIELD_DESC);
        oprot.writeI64(struct.versionNo);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SL_ORGTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SL_ORGTupleScheme getScheme() {
      return new SL_ORGTupleScheme();
    }
  }

  private static class SL_ORGTupleScheme extends org.apache.thrift.scheme.TupleScheme<SL_ORG> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SL_ORG struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeString(struct.orgId);
      oprot.writeString(struct.orgName);
      oprot.writeString(struct.orgType);
      oprot.writeString(struct.orgStat);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetLocation()) {
        optionals.set(0);
      }
      if (struct.isSetLegal()) {
        optionals.set(1);
      }
      if (struct.isSetContact()) {
        optionals.set(2);
      }
      if (struct.isSetTel()) {
        optionals.set(3);
      }
      if (struct.isSetCreditAmt()) {
        optionals.set(4);
      }
      if (struct.isSetDepositAmt()) {
        optionals.set(5);
      }
      if (struct.isSetAdvanceAmt()) {
        optionals.set(6);
      }
      if (struct.isSetAdvanceFrozeAmt()) {
        optionals.set(7);
      }
      if (struct.isSetOpeUserId()) {
        optionals.set(8);
      }
      if (struct.isSetOpeTime()) {
        optionals.set(9);
      }
      if (struct.isSetVersionNo()) {
        optionals.set(10);
      }
      oprot.writeBitSet(optionals, 11);
      if (struct.isSetLocation()) {
        oprot.writeString(struct.location);
      }
      if (struct.isSetLegal()) {
        oprot.writeString(struct.legal);
      }
      if (struct.isSetContact()) {
        oprot.writeString(struct.contact);
      }
      if (struct.isSetTel()) {
        oprot.writeString(struct.tel);
      }
      if (struct.isSetCreditAmt()) {
        oprot.writeDouble(struct.creditAmt);
      }
      if (struct.isSetDepositAmt()) {
        oprot.writeI64(struct.depositAmt);
      }
      if (struct.isSetAdvanceAmt()) {
        oprot.writeI64(struct.advanceAmt);
      }
      if (struct.isSetAdvanceFrozeAmt()) {
        oprot.writeI64(struct.advanceFrozeAmt);
      }
      if (struct.isSetOpeUserId()) {
        oprot.writeString(struct.opeUserId);
      }
      if (struct.isSetOpeTime()) {
        oprot.writeI64(struct.opeTime);
      }
      if (struct.isSetVersionNo()) {
        oprot.writeI64(struct.versionNo);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SL_ORG struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.orgId = iprot.readString();
      struct.setOrgIdIsSet(true);
      struct.orgName = iprot.readString();
      struct.setOrgNameIsSet(true);
      struct.orgType = iprot.readString();
      struct.setOrgTypeIsSet(true);
      struct.orgStat = iprot.readString();
      struct.setOrgStatIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(11);
      if (incoming.get(0)) {
        struct.location = iprot.readString();
        struct.setLocationIsSet(true);
      }
      if (incoming.get(1)) {
        struct.legal = iprot.readString();
        struct.setLegalIsSet(true);
      }
      if (incoming.get(2)) {
        struct.contact = iprot.readString();
        struct.setContactIsSet(true);
      }
      if (incoming.get(3)) {
        struct.tel = iprot.readString();
        struct.setTelIsSet(true);
      }
      if (incoming.get(4)) {
        struct.creditAmt = iprot.readDouble();
        struct.setCreditAmtIsSet(true);
      }
      if (incoming.get(5)) {
        struct.depositAmt = iprot.readI64();
        struct.setDepositAmtIsSet(true);
      }
      if (incoming.get(6)) {
        struct.advanceAmt = iprot.readI64();
        struct.setAdvanceAmtIsSet(true);
      }
      if (incoming.get(7)) {
        struct.advanceFrozeAmt = iprot.readI64();
        struct.setAdvanceFrozeAmtIsSet(true);
      }
      if (incoming.get(8)) {
        struct.opeUserId = iprot.readString();
        struct.setOpeUserIdIsSet(true);
      }
      if (incoming.get(9)) {
        struct.opeTime = iprot.readI64();
        struct.setOpeTimeIsSet(true);
      }
      if (incoming.get(10)) {
        struct.versionNo = iprot.readI64();
        struct.setVersionNoIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

