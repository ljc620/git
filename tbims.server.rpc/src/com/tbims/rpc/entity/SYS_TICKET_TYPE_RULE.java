/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.tbims.rpc.entity;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
/**
 * 票种检票规则表
 */
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-10-15")
public class SYS_TICKET_TYPE_RULE implements org.apache.thrift.TBase<SYS_TICKET_TYPE_RULE, SYS_TICKET_TYPE_RULE._Fields>, java.io.Serializable, Cloneable, Comparable<SYS_TICKET_TYPE_RULE> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SYS_TICKET_TYPE_RULE");

  private static final org.apache.thrift.protocol.TField RULE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("ruleId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField TICKET_TYPE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("ticketTypeId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField BEGIN_DT_FIELD_DESC = new org.apache.thrift.protocol.TField("beginDt", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField END_DT_FIELD_DESC = new org.apache.thrift.protocol.TField("endDt", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField BEGIN_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("beginTime", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endTime", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField VALID_WEEK_FIELD_DESC = new org.apache.thrift.protocol.TField("validWeek", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField OPE_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("opeUserId", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField OPE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("opeTime", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField VERSION_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("versionNo", org.apache.thrift.protocol.TType.I64, (short)10);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SYS_TICKET_TYPE_RULEStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SYS_TICKET_TYPE_RULETupleSchemeFactory();

  /**
   * 检票规则编号
   */
  public java.lang.String ruleId; // required
  /**
   * 票种编号
   */
  public java.lang.String ticketTypeId; // required
  /**
   * 有效开始日期
   */
  public long beginDt; // optional
  /**
   * 有效结束日期
   */
  public long endDt; // optional
  /**
   * 有效开始时间(秒)
   */
  public long beginTime; // optional
  /**
   * 有效结束时间(秒)
   */
  public long endTime; // optional
  /**
   * 有效星期(0-6位分别对应星期日至星期六(对应位1代表有效 0代表无效)
   */
  public java.lang.String validWeek; // optional
  /**
   * 操作人
   */
  public java.lang.String opeUserId; // optional
  /**
   * 操作时间
   */
  public long opeTime; // optional
  /**
   * 版本号
   */
  public long versionNo; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 检票规则编号
     */
    RULE_ID((short)1, "ruleId"),
    /**
     * 票种编号
     */
    TICKET_TYPE_ID((short)2, "ticketTypeId"),
    /**
     * 有效开始日期
     */
    BEGIN_DT((short)3, "beginDt"),
    /**
     * 有效结束日期
     */
    END_DT((short)4, "endDt"),
    /**
     * 有效开始时间(秒)
     */
    BEGIN_TIME((short)5, "beginTime"),
    /**
     * 有效结束时间(秒)
     */
    END_TIME((short)6, "endTime"),
    /**
     * 有效星期(0-6位分别对应星期日至星期六(对应位1代表有效 0代表无效)
     */
    VALID_WEEK((short)7, "validWeek"),
    /**
     * 操作人
     */
    OPE_USER_ID((short)8, "opeUserId"),
    /**
     * 操作时间
     */
    OPE_TIME((short)9, "opeTime"),
    /**
     * 版本号
     */
    VERSION_NO((short)10, "versionNo");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RULE_ID
          return RULE_ID;
        case 2: // TICKET_TYPE_ID
          return TICKET_TYPE_ID;
        case 3: // BEGIN_DT
          return BEGIN_DT;
        case 4: // END_DT
          return END_DT;
        case 5: // BEGIN_TIME
          return BEGIN_TIME;
        case 6: // END_TIME
          return END_TIME;
        case 7: // VALID_WEEK
          return VALID_WEEK;
        case 8: // OPE_USER_ID
          return OPE_USER_ID;
        case 9: // OPE_TIME
          return OPE_TIME;
        case 10: // VERSION_NO
          return VERSION_NO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __BEGINDT_ISSET_ID = 0;
  private static final int __ENDDT_ISSET_ID = 1;
  private static final int __BEGINTIME_ISSET_ID = 2;
  private static final int __ENDTIME_ISSET_ID = 3;
  private static final int __OPETIME_ISSET_ID = 4;
  private static final int __VERSIONNO_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.BEGIN_DT,_Fields.END_DT,_Fields.BEGIN_TIME,_Fields.END_TIME,_Fields.VALID_WEEK,_Fields.OPE_USER_ID,_Fields.OPE_TIME,_Fields.VERSION_NO};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RULE_ID, new org.apache.thrift.meta_data.FieldMetaData("ruleId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TICKET_TYPE_ID, new org.apache.thrift.meta_data.FieldMetaData("ticketTypeId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BEGIN_DT, new org.apache.thrift.meta_data.FieldMetaData("beginDt", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_DT, new org.apache.thrift.meta_data.FieldMetaData("endDt", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.BEGIN_TIME, new org.apache.thrift.meta_data.FieldMetaData("beginTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_TIME, new org.apache.thrift.meta_data.FieldMetaData("endTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.VALID_WEEK, new org.apache.thrift.meta_data.FieldMetaData("validWeek", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OPE_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("opeUserId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OPE_TIME, new org.apache.thrift.meta_data.FieldMetaData("opeTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.VERSION_NO, new org.apache.thrift.meta_data.FieldMetaData("versionNo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SYS_TICKET_TYPE_RULE.class, metaDataMap);
  }

  public SYS_TICKET_TYPE_RULE() {
  }

  public SYS_TICKET_TYPE_RULE(
    java.lang.String ruleId,
    java.lang.String ticketTypeId)
  {
    this();
    this.ruleId = ruleId;
    this.ticketTypeId = ticketTypeId;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SYS_TICKET_TYPE_RULE(SYS_TICKET_TYPE_RULE other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetRuleId()) {
      this.ruleId = other.ruleId;
    }
    if (other.isSetTicketTypeId()) {
      this.ticketTypeId = other.ticketTypeId;
    }
    this.beginDt = other.beginDt;
    this.endDt = other.endDt;
    this.beginTime = other.beginTime;
    this.endTime = other.endTime;
    if (other.isSetValidWeek()) {
      this.validWeek = other.validWeek;
    }
    if (other.isSetOpeUserId()) {
      this.opeUserId = other.opeUserId;
    }
    this.opeTime = other.opeTime;
    this.versionNo = other.versionNo;
  }

  public SYS_TICKET_TYPE_RULE deepCopy() {
    return new SYS_TICKET_TYPE_RULE(this);
  }

  @Override
  public void clear() {
    this.ruleId = null;
    this.ticketTypeId = null;
    setBeginDtIsSet(false);
    this.beginDt = 0;
    setEndDtIsSet(false);
    this.endDt = 0;
    setBeginTimeIsSet(false);
    this.beginTime = 0;
    setEndTimeIsSet(false);
    this.endTime = 0;
    this.validWeek = null;
    this.opeUserId = null;
    setOpeTimeIsSet(false);
    this.opeTime = 0;
    setVersionNoIsSet(false);
    this.versionNo = 0;
  }

  /**
   * 检票规则编号
   */
  public java.lang.String getRuleId() {
    return this.ruleId;
  }

  /**
   * 检票规则编号
   */
  public SYS_TICKET_TYPE_RULE setRuleId(java.lang.String ruleId) {
    this.ruleId = ruleId;
    return this;
  }

  public void unsetRuleId() {
    this.ruleId = null;
  }

  /** Returns true if field ruleId is set (has been assigned a value) and false otherwise */
  public boolean isSetRuleId() {
    return this.ruleId != null;
  }

  public void setRuleIdIsSet(boolean value) {
    if (!value) {
      this.ruleId = null;
    }
  }

  /**
   * 票种编号
   */
  public java.lang.String getTicketTypeId() {
    return this.ticketTypeId;
  }

  /**
   * 票种编号
   */
  public SYS_TICKET_TYPE_RULE setTicketTypeId(java.lang.String ticketTypeId) {
    this.ticketTypeId = ticketTypeId;
    return this;
  }

  public void unsetTicketTypeId() {
    this.ticketTypeId = null;
  }

  /** Returns true if field ticketTypeId is set (has been assigned a value) and false otherwise */
  public boolean isSetTicketTypeId() {
    return this.ticketTypeId != null;
  }

  public void setTicketTypeIdIsSet(boolean value) {
    if (!value) {
      this.ticketTypeId = null;
    }
  }

  /**
   * 有效开始日期
   */
  public long getBeginDt() {
    return this.beginDt;
  }

  /**
   * 有效开始日期
   */
  public SYS_TICKET_TYPE_RULE setBeginDt(long beginDt) {
    this.beginDt = beginDt;
    setBeginDtIsSet(true);
    return this;
  }

  public void unsetBeginDt() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BEGINDT_ISSET_ID);
  }

  /** Returns true if field beginDt is set (has been assigned a value) and false otherwise */
  public boolean isSetBeginDt() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BEGINDT_ISSET_ID);
  }

  public void setBeginDtIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BEGINDT_ISSET_ID, value);
  }

  /**
   * 有效结束日期
   */
  public long getEndDt() {
    return this.endDt;
  }

  /**
   * 有效结束日期
   */
  public SYS_TICKET_TYPE_RULE setEndDt(long endDt) {
    this.endDt = endDt;
    setEndDtIsSet(true);
    return this;
  }

  public void unsetEndDt() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ENDDT_ISSET_ID);
  }

  /** Returns true if field endDt is set (has been assigned a value) and false otherwise */
  public boolean isSetEndDt() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ENDDT_ISSET_ID);
  }

  public void setEndDtIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ENDDT_ISSET_ID, value);
  }

  /**
   * 有效开始时间(秒)
   */
  public long getBeginTime() {
    return this.beginTime;
  }

  /**
   * 有效开始时间(秒)
   */
  public SYS_TICKET_TYPE_RULE setBeginTime(long beginTime) {
    this.beginTime = beginTime;
    setBeginTimeIsSet(true);
    return this;
  }

  public void unsetBeginTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BEGINTIME_ISSET_ID);
  }

  /** Returns true if field beginTime is set (has been assigned a value) and false otherwise */
  public boolean isSetBeginTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BEGINTIME_ISSET_ID);
  }

  public void setBeginTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BEGINTIME_ISSET_ID, value);
  }

  /**
   * 有效结束时间(秒)
   */
  public long getEndTime() {
    return this.endTime;
  }

  /**
   * 有效结束时间(秒)
   */
  public SYS_TICKET_TYPE_RULE setEndTime(long endTime) {
    this.endTime = endTime;
    setEndTimeIsSet(true);
    return this;
  }

  public void unsetEndTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  /** Returns true if field endTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  public void setEndTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ENDTIME_ISSET_ID, value);
  }

  /**
   * 有效星期(0-6位分别对应星期日至星期六(对应位1代表有效 0代表无效)
   */
  public java.lang.String getValidWeek() {
    return this.validWeek;
  }

  /**
   * 有效星期(0-6位分别对应星期日至星期六(对应位1代表有效 0代表无效)
   */
  public SYS_TICKET_TYPE_RULE setValidWeek(java.lang.String validWeek) {
    this.validWeek = validWeek;
    return this;
  }

  public void unsetValidWeek() {
    this.validWeek = null;
  }

  /** Returns true if field validWeek is set (has been assigned a value) and false otherwise */
  public boolean isSetValidWeek() {
    return this.validWeek != null;
  }

  public void setValidWeekIsSet(boolean value) {
    if (!value) {
      this.validWeek = null;
    }
  }

  /**
   * 操作人
   */
  public java.lang.String getOpeUserId() {
    return this.opeUserId;
  }

  /**
   * 操作人
   */
  public SYS_TICKET_TYPE_RULE setOpeUserId(java.lang.String opeUserId) {
    this.opeUserId = opeUserId;
    return this;
  }

  public void unsetOpeUserId() {
    this.opeUserId = null;
  }

  /** Returns true if field opeUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetOpeUserId() {
    return this.opeUserId != null;
  }

  public void setOpeUserIdIsSet(boolean value) {
    if (!value) {
      this.opeUserId = null;
    }
  }

  /**
   * 操作时间
   */
  public long getOpeTime() {
    return this.opeTime;
  }

  /**
   * 操作时间
   */
  public SYS_TICKET_TYPE_RULE setOpeTime(long opeTime) {
    this.opeTime = opeTime;
    setOpeTimeIsSet(true);
    return this;
  }

  public void unsetOpeTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OPETIME_ISSET_ID);
  }

  /** Returns true if field opeTime is set (has been assigned a value) and false otherwise */
  public boolean isSetOpeTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OPETIME_ISSET_ID);
  }

  public void setOpeTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OPETIME_ISSET_ID, value);
  }

  /**
   * 版本号
   */
  public long getVersionNo() {
    return this.versionNo;
  }

  /**
   * 版本号
   */
  public SYS_TICKET_TYPE_RULE setVersionNo(long versionNo) {
    this.versionNo = versionNo;
    setVersionNoIsSet(true);
    return this;
  }

  public void unsetVersionNo() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __VERSIONNO_ISSET_ID);
  }

  /** Returns true if field versionNo is set (has been assigned a value) and false otherwise */
  public boolean isSetVersionNo() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __VERSIONNO_ISSET_ID);
  }

  public void setVersionNoIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __VERSIONNO_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case RULE_ID:
      if (value == null) {
        unsetRuleId();
      } else {
        setRuleId((java.lang.String)value);
      }
      break;

    case TICKET_TYPE_ID:
      if (value == null) {
        unsetTicketTypeId();
      } else {
        setTicketTypeId((java.lang.String)value);
      }
      break;

    case BEGIN_DT:
      if (value == null) {
        unsetBeginDt();
      } else {
        setBeginDt((java.lang.Long)value);
      }
      break;

    case END_DT:
      if (value == null) {
        unsetEndDt();
      } else {
        setEndDt((java.lang.Long)value);
      }
      break;

    case BEGIN_TIME:
      if (value == null) {
        unsetBeginTime();
      } else {
        setBeginTime((java.lang.Long)value);
      }
      break;

    case END_TIME:
      if (value == null) {
        unsetEndTime();
      } else {
        setEndTime((java.lang.Long)value);
      }
      break;

    case VALID_WEEK:
      if (value == null) {
        unsetValidWeek();
      } else {
        setValidWeek((java.lang.String)value);
      }
      break;

    case OPE_USER_ID:
      if (value == null) {
        unsetOpeUserId();
      } else {
        setOpeUserId((java.lang.String)value);
      }
      break;

    case OPE_TIME:
      if (value == null) {
        unsetOpeTime();
      } else {
        setOpeTime((java.lang.Long)value);
      }
      break;

    case VERSION_NO:
      if (value == null) {
        unsetVersionNo();
      } else {
        setVersionNo((java.lang.Long)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case RULE_ID:
      return getRuleId();

    case TICKET_TYPE_ID:
      return getTicketTypeId();

    case BEGIN_DT:
      return getBeginDt();

    case END_DT:
      return getEndDt();

    case BEGIN_TIME:
      return getBeginTime();

    case END_TIME:
      return getEndTime();

    case VALID_WEEK:
      return getValidWeek();

    case OPE_USER_ID:
      return getOpeUserId();

    case OPE_TIME:
      return getOpeTime();

    case VERSION_NO:
      return getVersionNo();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case RULE_ID:
      return isSetRuleId();
    case TICKET_TYPE_ID:
      return isSetTicketTypeId();
    case BEGIN_DT:
      return isSetBeginDt();
    case END_DT:
      return isSetEndDt();
    case BEGIN_TIME:
      return isSetBeginTime();
    case END_TIME:
      return isSetEndTime();
    case VALID_WEEK:
      return isSetValidWeek();
    case OPE_USER_ID:
      return isSetOpeUserId();
    case OPE_TIME:
      return isSetOpeTime();
    case VERSION_NO:
      return isSetVersionNo();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof SYS_TICKET_TYPE_RULE)
      return this.equals((SYS_TICKET_TYPE_RULE)that);
    return false;
  }

  public boolean equals(SYS_TICKET_TYPE_RULE that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_ruleId = true && this.isSetRuleId();
    boolean that_present_ruleId = true && that.isSetRuleId();
    if (this_present_ruleId || that_present_ruleId) {
      if (!(this_present_ruleId && that_present_ruleId))
        return false;
      if (!this.ruleId.equals(that.ruleId))
        return false;
    }

    boolean this_present_ticketTypeId = true && this.isSetTicketTypeId();
    boolean that_present_ticketTypeId = true && that.isSetTicketTypeId();
    if (this_present_ticketTypeId || that_present_ticketTypeId) {
      if (!(this_present_ticketTypeId && that_present_ticketTypeId))
        return false;
      if (!this.ticketTypeId.equals(that.ticketTypeId))
        return false;
    }

    boolean this_present_beginDt = true && this.isSetBeginDt();
    boolean that_present_beginDt = true && that.isSetBeginDt();
    if (this_present_beginDt || that_present_beginDt) {
      if (!(this_present_beginDt && that_present_beginDt))
        return false;
      if (this.beginDt != that.beginDt)
        return false;
    }

    boolean this_present_endDt = true && this.isSetEndDt();
    boolean that_present_endDt = true && that.isSetEndDt();
    if (this_present_endDt || that_present_endDt) {
      if (!(this_present_endDt && that_present_endDt))
        return false;
      if (this.endDt != that.endDt)
        return false;
    }

    boolean this_present_beginTime = true && this.isSetBeginTime();
    boolean that_present_beginTime = true && that.isSetBeginTime();
    if (this_present_beginTime || that_present_beginTime) {
      if (!(this_present_beginTime && that_present_beginTime))
        return false;
      if (this.beginTime != that.beginTime)
        return false;
    }

    boolean this_present_endTime = true && this.isSetEndTime();
    boolean that_present_endTime = true && that.isSetEndTime();
    if (this_present_endTime || that_present_endTime) {
      if (!(this_present_endTime && that_present_endTime))
        return false;
      if (this.endTime != that.endTime)
        return false;
    }

    boolean this_present_validWeek = true && this.isSetValidWeek();
    boolean that_present_validWeek = true && that.isSetValidWeek();
    if (this_present_validWeek || that_present_validWeek) {
      if (!(this_present_validWeek && that_present_validWeek))
        return false;
      if (!this.validWeek.equals(that.validWeek))
        return false;
    }

    boolean this_present_opeUserId = true && this.isSetOpeUserId();
    boolean that_present_opeUserId = true && that.isSetOpeUserId();
    if (this_present_opeUserId || that_present_opeUserId) {
      if (!(this_present_opeUserId && that_present_opeUserId))
        return false;
      if (!this.opeUserId.equals(that.opeUserId))
        return false;
    }

    boolean this_present_opeTime = true && this.isSetOpeTime();
    boolean that_present_opeTime = true && that.isSetOpeTime();
    if (this_present_opeTime || that_present_opeTime) {
      if (!(this_present_opeTime && that_present_opeTime))
        return false;
      if (this.opeTime != that.opeTime)
        return false;
    }

    boolean this_present_versionNo = true && this.isSetVersionNo();
    boolean that_present_versionNo = true && that.isSetVersionNo();
    if (this_present_versionNo || that_present_versionNo) {
      if (!(this_present_versionNo && that_present_versionNo))
        return false;
      if (this.versionNo != that.versionNo)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetRuleId()) ? 131071 : 524287);
    if (isSetRuleId())
      hashCode = hashCode * 8191 + ruleId.hashCode();

    hashCode = hashCode * 8191 + ((isSetTicketTypeId()) ? 131071 : 524287);
    if (isSetTicketTypeId())
      hashCode = hashCode * 8191 + ticketTypeId.hashCode();

    hashCode = hashCode * 8191 + ((isSetBeginDt()) ? 131071 : 524287);
    if (isSetBeginDt())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(beginDt);

    hashCode = hashCode * 8191 + ((isSetEndDt()) ? 131071 : 524287);
    if (isSetEndDt())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(endDt);

    hashCode = hashCode * 8191 + ((isSetBeginTime()) ? 131071 : 524287);
    if (isSetBeginTime())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(beginTime);

    hashCode = hashCode * 8191 + ((isSetEndTime()) ? 131071 : 524287);
    if (isSetEndTime())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(endTime);

    hashCode = hashCode * 8191 + ((isSetValidWeek()) ? 131071 : 524287);
    if (isSetValidWeek())
      hashCode = hashCode * 8191 + validWeek.hashCode();

    hashCode = hashCode * 8191 + ((isSetOpeUserId()) ? 131071 : 524287);
    if (isSetOpeUserId())
      hashCode = hashCode * 8191 + opeUserId.hashCode();

    hashCode = hashCode * 8191 + ((isSetOpeTime()) ? 131071 : 524287);
    if (isSetOpeTime())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(opeTime);

    hashCode = hashCode * 8191 + ((isSetVersionNo()) ? 131071 : 524287);
    if (isSetVersionNo())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(versionNo);

    return hashCode;
  }

  @Override
  public int compareTo(SYS_TICKET_TYPE_RULE other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetRuleId()).compareTo(other.isSetRuleId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRuleId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ruleId, other.ruleId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTicketTypeId()).compareTo(other.isSetTicketTypeId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTicketTypeId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ticketTypeId, other.ticketTypeId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBeginDt()).compareTo(other.isSetBeginDt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBeginDt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.beginDt, other.beginDt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEndDt()).compareTo(other.isSetEndDt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndDt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endDt, other.endDt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBeginTime()).compareTo(other.isSetBeginTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBeginTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.beginTime, other.beginTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEndTime()).compareTo(other.isSetEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTime, other.endTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetValidWeek()).compareTo(other.isSetValidWeek());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValidWeek()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.validWeek, other.validWeek);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOpeUserId()).compareTo(other.isSetOpeUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOpeUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.opeUserId, other.opeUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOpeTime()).compareTo(other.isSetOpeTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOpeTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.opeTime, other.opeTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetVersionNo()).compareTo(other.isSetVersionNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVersionNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.versionNo, other.versionNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SYS_TICKET_TYPE_RULE(");
    boolean first = true;

    sb.append("ruleId:");
    if (this.ruleId == null) {
      sb.append("null");
    } else {
      sb.append(this.ruleId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ticketTypeId:");
    if (this.ticketTypeId == null) {
      sb.append("null");
    } else {
      sb.append(this.ticketTypeId);
    }
    first = false;
    if (isSetBeginDt()) {
      if (!first) sb.append(", ");
      sb.append("beginDt:");
      sb.append(this.beginDt);
      first = false;
    }
    if (isSetEndDt()) {
      if (!first) sb.append(", ");
      sb.append("endDt:");
      sb.append(this.endDt);
      first = false;
    }
    if (isSetBeginTime()) {
      if (!first) sb.append(", ");
      sb.append("beginTime:");
      sb.append(this.beginTime);
      first = false;
    }
    if (isSetEndTime()) {
      if (!first) sb.append(", ");
      sb.append("endTime:");
      sb.append(this.endTime);
      first = false;
    }
    if (isSetValidWeek()) {
      if (!first) sb.append(", ");
      sb.append("validWeek:");
      if (this.validWeek == null) {
        sb.append("null");
      } else {
        sb.append(this.validWeek);
      }
      first = false;
    }
    if (isSetOpeUserId()) {
      if (!first) sb.append(", ");
      sb.append("opeUserId:");
      if (this.opeUserId == null) {
        sb.append("null");
      } else {
        sb.append(this.opeUserId);
      }
      first = false;
    }
    if (isSetOpeTime()) {
      if (!first) sb.append(", ");
      sb.append("opeTime:");
      sb.append(this.opeTime);
      first = false;
    }
    if (isSetVersionNo()) {
      if (!first) sb.append(", ");
      sb.append("versionNo:");
      sb.append(this.versionNo);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (ruleId == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'ruleId' was not present! Struct: " + toString());
    }
    if (ticketTypeId == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'ticketTypeId' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SYS_TICKET_TYPE_RULEStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SYS_TICKET_TYPE_RULEStandardScheme getScheme() {
      return new SYS_TICKET_TYPE_RULEStandardScheme();
    }
  }

  private static class SYS_TICKET_TYPE_RULEStandardScheme extends org.apache.thrift.scheme.StandardScheme<SYS_TICKET_TYPE_RULE> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SYS_TICKET_TYPE_RULE struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // RULE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ruleId = iprot.readString();
              struct.setRuleIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TICKET_TYPE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ticketTypeId = iprot.readString();
              struct.setTicketTypeIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // BEGIN_DT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.beginDt = iprot.readI64();
              struct.setBeginDtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // END_DT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endDt = iprot.readI64();
              struct.setEndDtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // BEGIN_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.beginTime = iprot.readI64();
              struct.setBeginTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endTime = iprot.readI64();
              struct.setEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // VALID_WEEK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.validWeek = iprot.readString();
              struct.setValidWeekIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // OPE_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.opeUserId = iprot.readString();
              struct.setOpeUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // OPE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.opeTime = iprot.readI64();
              struct.setOpeTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // VERSION_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.versionNo = iprot.readI64();
              struct.setVersionNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SYS_TICKET_TYPE_RULE struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.ruleId != null) {
        oprot.writeFieldBegin(RULE_ID_FIELD_DESC);
        oprot.writeString(struct.ruleId);
        oprot.writeFieldEnd();
      }
      if (struct.ticketTypeId != null) {
        oprot.writeFieldBegin(TICKET_TYPE_ID_FIELD_DESC);
        oprot.writeString(struct.ticketTypeId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetBeginDt()) {
        oprot.writeFieldBegin(BEGIN_DT_FIELD_DESC);
        oprot.writeI64(struct.beginDt);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEndDt()) {
        oprot.writeFieldBegin(END_DT_FIELD_DESC);
        oprot.writeI64(struct.endDt);
        oprot.writeFieldEnd();
      }
      if (struct.isSetBeginTime()) {
        oprot.writeFieldBegin(BEGIN_TIME_FIELD_DESC);
        oprot.writeI64(struct.beginTime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEndTime()) {
        oprot.writeFieldBegin(END_TIME_FIELD_DESC);
        oprot.writeI64(struct.endTime);
        oprot.writeFieldEnd();
      }
      if (struct.validWeek != null) {
        if (struct.isSetValidWeek()) {
          oprot.writeFieldBegin(VALID_WEEK_FIELD_DESC);
          oprot.writeString(struct.validWeek);
          oprot.writeFieldEnd();
        }
      }
      if (struct.opeUserId != null) {
        if (struct.isSetOpeUserId()) {
          oprot.writeFieldBegin(OPE_USER_ID_FIELD_DESC);
          oprot.writeString(struct.opeUserId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetOpeTime()) {
        oprot.writeFieldBegin(OPE_TIME_FIELD_DESC);
        oprot.writeI64(struct.opeTime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetVersionNo()) {
        oprot.writeFieldBegin(VERSION_NO_FIELD_DESC);
        oprot.writeI64(struct.versionNo);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SYS_TICKET_TYPE_RULETupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SYS_TICKET_TYPE_RULETupleScheme getScheme() {
      return new SYS_TICKET_TYPE_RULETupleScheme();
    }
  }

  private static class SYS_TICKET_TYPE_RULETupleScheme extends org.apache.thrift.scheme.TupleScheme<SYS_TICKET_TYPE_RULE> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SYS_TICKET_TYPE_RULE struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeString(struct.ruleId);
      oprot.writeString(struct.ticketTypeId);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetBeginDt()) {
        optionals.set(0);
      }
      if (struct.isSetEndDt()) {
        optionals.set(1);
      }
      if (struct.isSetBeginTime()) {
        optionals.set(2);
      }
      if (struct.isSetEndTime()) {
        optionals.set(3);
      }
      if (struct.isSetValidWeek()) {
        optionals.set(4);
      }
      if (struct.isSetOpeUserId()) {
        optionals.set(5);
      }
      if (struct.isSetOpeTime()) {
        optionals.set(6);
      }
      if (struct.isSetVersionNo()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetBeginDt()) {
        oprot.writeI64(struct.beginDt);
      }
      if (struct.isSetEndDt()) {
        oprot.writeI64(struct.endDt);
      }
      if (struct.isSetBeginTime()) {
        oprot.writeI64(struct.beginTime);
      }
      if (struct.isSetEndTime()) {
        oprot.writeI64(struct.endTime);
      }
      if (struct.isSetValidWeek()) {
        oprot.writeString(struct.validWeek);
      }
      if (struct.isSetOpeUserId()) {
        oprot.writeString(struct.opeUserId);
      }
      if (struct.isSetOpeTime()) {
        oprot.writeI64(struct.opeTime);
      }
      if (struct.isSetVersionNo()) {
        oprot.writeI64(struct.versionNo);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SYS_TICKET_TYPE_RULE struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.ruleId = iprot.readString();
      struct.setRuleIdIsSet(true);
      struct.ticketTypeId = iprot.readString();
      struct.setTicketTypeIdIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        struct.beginDt = iprot.readI64();
        struct.setBeginDtIsSet(true);
      }
      if (incoming.get(1)) {
        struct.endDt = iprot.readI64();
        struct.setEndDtIsSet(true);
      }
      if (incoming.get(2)) {
        struct.beginTime = iprot.readI64();
        struct.setBeginTimeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.endTime = iprot.readI64();
        struct.setEndTimeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.validWeek = iprot.readString();
        struct.setValidWeekIsSet(true);
      }
      if (incoming.get(5)) {
        struct.opeUserId = iprot.readString();
        struct.setOpeUserIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.opeTime = iprot.readI64();
        struct.setOpeTimeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.versionNo = iprot.readI64();
        struct.setVersionNoIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

