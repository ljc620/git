/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.tbims.rpc.entity;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
/**
 * 配送明细表
 */
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-08-21")
public class STR_DELIVERY_DETAIL implements org.apache.thrift.TBase<STR_DELIVERY_DETAIL, STR_DELIVERY_DETAIL._Fields>, java.io.Serializable, Cloneable, Comparable<STR_DELIVERY_DETAIL> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("STR_DELIVERY_DETAIL");

  private static final org.apache.thrift.protocol.TField DELIVERY_DETAIL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("deliveryDetailId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CHEST_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("chestId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField APPLY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("applyId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField TICKET_TYPE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("ticketTypeId", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField BEGIN_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("beginNo", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField END_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("endNo", org.apache.thrift.protocol.TType.I64, (short)6);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new STR_DELIVERY_DETAILStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new STR_DELIVERY_DETAILTupleSchemeFactory();

  /**
   * 配送明细ID
   */
  public java.lang.String deliveryDetailId; // required
  /**
   * 箱号
   */
  public java.lang.String chestId; // required
  /**
   * 申请编号
   */
  public java.lang.String applyId; // required
  /**
   * 票种编号
   */
  public java.lang.String ticketTypeId; // required
  /**
   * 票起号
   */
  public long beginNo; // required
  /**
   * 票止号
   */
  public long endNo; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 配送明细ID
     */
    DELIVERY_DETAIL_ID((short)1, "deliveryDetailId"),
    /**
     * 箱号
     */
    CHEST_ID((short)2, "chestId"),
    /**
     * 申请编号
     */
    APPLY_ID((short)3, "applyId"),
    /**
     * 票种编号
     */
    TICKET_TYPE_ID((short)4, "ticketTypeId"),
    /**
     * 票起号
     */
    BEGIN_NO((short)5, "beginNo"),
    /**
     * 票止号
     */
    END_NO((short)6, "endNo");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // DELIVERY_DETAIL_ID
          return DELIVERY_DETAIL_ID;
        case 2: // CHEST_ID
          return CHEST_ID;
        case 3: // APPLY_ID
          return APPLY_ID;
        case 4: // TICKET_TYPE_ID
          return TICKET_TYPE_ID;
        case 5: // BEGIN_NO
          return BEGIN_NO;
        case 6: // END_NO
          return END_NO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __BEGINNO_ISSET_ID = 0;
  private static final int __ENDNO_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.DELIVERY_DETAIL_ID, new org.apache.thrift.meta_data.FieldMetaData("deliveryDetailId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHEST_ID, new org.apache.thrift.meta_data.FieldMetaData("chestId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPLY_ID, new org.apache.thrift.meta_data.FieldMetaData("applyId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TICKET_TYPE_ID, new org.apache.thrift.meta_data.FieldMetaData("ticketTypeId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BEGIN_NO, new org.apache.thrift.meta_data.FieldMetaData("beginNo", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_NO, new org.apache.thrift.meta_data.FieldMetaData("endNo", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(STR_DELIVERY_DETAIL.class, metaDataMap);
  }

  public STR_DELIVERY_DETAIL() {
  }

  public STR_DELIVERY_DETAIL(
    java.lang.String deliveryDetailId,
    java.lang.String chestId,
    java.lang.String applyId,
    java.lang.String ticketTypeId,
    long beginNo,
    long endNo)
  {
    this();
    this.deliveryDetailId = deliveryDetailId;
    this.chestId = chestId;
    this.applyId = applyId;
    this.ticketTypeId = ticketTypeId;
    this.beginNo = beginNo;
    setBeginNoIsSet(true);
    this.endNo = endNo;
    setEndNoIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public STR_DELIVERY_DETAIL(STR_DELIVERY_DETAIL other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetDeliveryDetailId()) {
      this.deliveryDetailId = other.deliveryDetailId;
    }
    if (other.isSetChestId()) {
      this.chestId = other.chestId;
    }
    if (other.isSetApplyId()) {
      this.applyId = other.applyId;
    }
    if (other.isSetTicketTypeId()) {
      this.ticketTypeId = other.ticketTypeId;
    }
    this.beginNo = other.beginNo;
    this.endNo = other.endNo;
  }

  public STR_DELIVERY_DETAIL deepCopy() {
    return new STR_DELIVERY_DETAIL(this);
  }

  @Override
  public void clear() {
    this.deliveryDetailId = null;
    this.chestId = null;
    this.applyId = null;
    this.ticketTypeId = null;
    setBeginNoIsSet(false);
    this.beginNo = 0;
    setEndNoIsSet(false);
    this.endNo = 0;
  }

  /**
   * 配送明细ID
   */
  public java.lang.String getDeliveryDetailId() {
    return this.deliveryDetailId;
  }

  /**
   * 配送明细ID
   */
  public STR_DELIVERY_DETAIL setDeliveryDetailId(java.lang.String deliveryDetailId) {
    this.deliveryDetailId = deliveryDetailId;
    return this;
  }

  public void unsetDeliveryDetailId() {
    this.deliveryDetailId = null;
  }

  /** Returns true if field deliveryDetailId is set (has been assigned a value) and false otherwise */
  public boolean isSetDeliveryDetailId() {
    return this.deliveryDetailId != null;
  }

  public void setDeliveryDetailIdIsSet(boolean value) {
    if (!value) {
      this.deliveryDetailId = null;
    }
  }

  /**
   * 箱号
   */
  public java.lang.String getChestId() {
    return this.chestId;
  }

  /**
   * 箱号
   */
  public STR_DELIVERY_DETAIL setChestId(java.lang.String chestId) {
    this.chestId = chestId;
    return this;
  }

  public void unsetChestId() {
    this.chestId = null;
  }

  /** Returns true if field chestId is set (has been assigned a value) and false otherwise */
  public boolean isSetChestId() {
    return this.chestId != null;
  }

  public void setChestIdIsSet(boolean value) {
    if (!value) {
      this.chestId = null;
    }
  }

  /**
   * 申请编号
   */
  public java.lang.String getApplyId() {
    return this.applyId;
  }

  /**
   * 申请编号
   */
  public STR_DELIVERY_DETAIL setApplyId(java.lang.String applyId) {
    this.applyId = applyId;
    return this;
  }

  public void unsetApplyId() {
    this.applyId = null;
  }

  /** Returns true if field applyId is set (has been assigned a value) and false otherwise */
  public boolean isSetApplyId() {
    return this.applyId != null;
  }

  public void setApplyIdIsSet(boolean value) {
    if (!value) {
      this.applyId = null;
    }
  }

  /**
   * 票种编号
   */
  public java.lang.String getTicketTypeId() {
    return this.ticketTypeId;
  }

  /**
   * 票种编号
   */
  public STR_DELIVERY_DETAIL setTicketTypeId(java.lang.String ticketTypeId) {
    this.ticketTypeId = ticketTypeId;
    return this;
  }

  public void unsetTicketTypeId() {
    this.ticketTypeId = null;
  }

  /** Returns true if field ticketTypeId is set (has been assigned a value) and false otherwise */
  public boolean isSetTicketTypeId() {
    return this.ticketTypeId != null;
  }

  public void setTicketTypeIdIsSet(boolean value) {
    if (!value) {
      this.ticketTypeId = null;
    }
  }

  /**
   * 票起号
   */
  public long getBeginNo() {
    return this.beginNo;
  }

  /**
   * 票起号
   */
  public STR_DELIVERY_DETAIL setBeginNo(long beginNo) {
    this.beginNo = beginNo;
    setBeginNoIsSet(true);
    return this;
  }

  public void unsetBeginNo() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BEGINNO_ISSET_ID);
  }

  /** Returns true if field beginNo is set (has been assigned a value) and false otherwise */
  public boolean isSetBeginNo() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BEGINNO_ISSET_ID);
  }

  public void setBeginNoIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BEGINNO_ISSET_ID, value);
  }

  /**
   * 票止号
   */
  public long getEndNo() {
    return this.endNo;
  }

  /**
   * 票止号
   */
  public STR_DELIVERY_DETAIL setEndNo(long endNo) {
    this.endNo = endNo;
    setEndNoIsSet(true);
    return this;
  }

  public void unsetEndNo() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ENDNO_ISSET_ID);
  }

  /** Returns true if field endNo is set (has been assigned a value) and false otherwise */
  public boolean isSetEndNo() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ENDNO_ISSET_ID);
  }

  public void setEndNoIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ENDNO_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case DELIVERY_DETAIL_ID:
      if (value == null) {
        unsetDeliveryDetailId();
      } else {
        setDeliveryDetailId((java.lang.String)value);
      }
      break;

    case CHEST_ID:
      if (value == null) {
        unsetChestId();
      } else {
        setChestId((java.lang.String)value);
      }
      break;

    case APPLY_ID:
      if (value == null) {
        unsetApplyId();
      } else {
        setApplyId((java.lang.String)value);
      }
      break;

    case TICKET_TYPE_ID:
      if (value == null) {
        unsetTicketTypeId();
      } else {
        setTicketTypeId((java.lang.String)value);
      }
      break;

    case BEGIN_NO:
      if (value == null) {
        unsetBeginNo();
      } else {
        setBeginNo((java.lang.Long)value);
      }
      break;

    case END_NO:
      if (value == null) {
        unsetEndNo();
      } else {
        setEndNo((java.lang.Long)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case DELIVERY_DETAIL_ID:
      return getDeliveryDetailId();

    case CHEST_ID:
      return getChestId();

    case APPLY_ID:
      return getApplyId();

    case TICKET_TYPE_ID:
      return getTicketTypeId();

    case BEGIN_NO:
      return getBeginNo();

    case END_NO:
      return getEndNo();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case DELIVERY_DETAIL_ID:
      return isSetDeliveryDetailId();
    case CHEST_ID:
      return isSetChestId();
    case APPLY_ID:
      return isSetApplyId();
    case TICKET_TYPE_ID:
      return isSetTicketTypeId();
    case BEGIN_NO:
      return isSetBeginNo();
    case END_NO:
      return isSetEndNo();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof STR_DELIVERY_DETAIL)
      return this.equals((STR_DELIVERY_DETAIL)that);
    return false;
  }

  public boolean equals(STR_DELIVERY_DETAIL that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_deliveryDetailId = true && this.isSetDeliveryDetailId();
    boolean that_present_deliveryDetailId = true && that.isSetDeliveryDetailId();
    if (this_present_deliveryDetailId || that_present_deliveryDetailId) {
      if (!(this_present_deliveryDetailId && that_present_deliveryDetailId))
        return false;
      if (!this.deliveryDetailId.equals(that.deliveryDetailId))
        return false;
    }

    boolean this_present_chestId = true && this.isSetChestId();
    boolean that_present_chestId = true && that.isSetChestId();
    if (this_present_chestId || that_present_chestId) {
      if (!(this_present_chestId && that_present_chestId))
        return false;
      if (!this.chestId.equals(that.chestId))
        return false;
    }

    boolean this_present_applyId = true && this.isSetApplyId();
    boolean that_present_applyId = true && that.isSetApplyId();
    if (this_present_applyId || that_present_applyId) {
      if (!(this_present_applyId && that_present_applyId))
        return false;
      if (!this.applyId.equals(that.applyId))
        return false;
    }

    boolean this_present_ticketTypeId = true && this.isSetTicketTypeId();
    boolean that_present_ticketTypeId = true && that.isSetTicketTypeId();
    if (this_present_ticketTypeId || that_present_ticketTypeId) {
      if (!(this_present_ticketTypeId && that_present_ticketTypeId))
        return false;
      if (!this.ticketTypeId.equals(that.ticketTypeId))
        return false;
    }

    boolean this_present_beginNo = true;
    boolean that_present_beginNo = true;
    if (this_present_beginNo || that_present_beginNo) {
      if (!(this_present_beginNo && that_present_beginNo))
        return false;
      if (this.beginNo != that.beginNo)
        return false;
    }

    boolean this_present_endNo = true;
    boolean that_present_endNo = true;
    if (this_present_endNo || that_present_endNo) {
      if (!(this_present_endNo && that_present_endNo))
        return false;
      if (this.endNo != that.endNo)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetDeliveryDetailId()) ? 131071 : 524287);
    if (isSetDeliveryDetailId())
      hashCode = hashCode * 8191 + deliveryDetailId.hashCode();

    hashCode = hashCode * 8191 + ((isSetChestId()) ? 131071 : 524287);
    if (isSetChestId())
      hashCode = hashCode * 8191 + chestId.hashCode();

    hashCode = hashCode * 8191 + ((isSetApplyId()) ? 131071 : 524287);
    if (isSetApplyId())
      hashCode = hashCode * 8191 + applyId.hashCode();

    hashCode = hashCode * 8191 + ((isSetTicketTypeId()) ? 131071 : 524287);
    if (isSetTicketTypeId())
      hashCode = hashCode * 8191 + ticketTypeId.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(beginNo);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(endNo);

    return hashCode;
  }

  @Override
  public int compareTo(STR_DELIVERY_DETAIL other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetDeliveryDetailId()).compareTo(other.isSetDeliveryDetailId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeliveryDetailId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliveryDetailId, other.deliveryDetailId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetChestId()).compareTo(other.isSetChestId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChestId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.chestId, other.chestId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApplyId()).compareTo(other.isSetApplyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applyId, other.applyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTicketTypeId()).compareTo(other.isSetTicketTypeId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTicketTypeId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ticketTypeId, other.ticketTypeId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBeginNo()).compareTo(other.isSetBeginNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBeginNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.beginNo, other.beginNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEndNo()).compareTo(other.isSetEndNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endNo, other.endNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("STR_DELIVERY_DETAIL(");
    boolean first = true;

    sb.append("deliveryDetailId:");
    if (this.deliveryDetailId == null) {
      sb.append("null");
    } else {
      sb.append(this.deliveryDetailId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("chestId:");
    if (this.chestId == null) {
      sb.append("null");
    } else {
      sb.append(this.chestId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("applyId:");
    if (this.applyId == null) {
      sb.append("null");
    } else {
      sb.append(this.applyId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ticketTypeId:");
    if (this.ticketTypeId == null) {
      sb.append("null");
    } else {
      sb.append(this.ticketTypeId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("beginNo:");
    sb.append(this.beginNo);
    first = false;
    if (!first) sb.append(", ");
    sb.append("endNo:");
    sb.append(this.endNo);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (deliveryDetailId == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'deliveryDetailId' was not present! Struct: " + toString());
    }
    if (chestId == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'chestId' was not present! Struct: " + toString());
    }
    if (applyId == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'applyId' was not present! Struct: " + toString());
    }
    if (ticketTypeId == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'ticketTypeId' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'beginNo' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'endNo' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class STR_DELIVERY_DETAILStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public STR_DELIVERY_DETAILStandardScheme getScheme() {
      return new STR_DELIVERY_DETAILStandardScheme();
    }
  }

  private static class STR_DELIVERY_DETAILStandardScheme extends org.apache.thrift.scheme.StandardScheme<STR_DELIVERY_DETAIL> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, STR_DELIVERY_DETAIL struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // DELIVERY_DETAIL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deliveryDetailId = iprot.readString();
              struct.setDeliveryDetailIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CHEST_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.chestId = iprot.readString();
              struct.setChestIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // APPLY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.applyId = iprot.readString();
              struct.setApplyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // TICKET_TYPE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ticketTypeId = iprot.readString();
              struct.setTicketTypeIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // BEGIN_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.beginNo = iprot.readI64();
              struct.setBeginNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // END_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endNo = iprot.readI64();
              struct.setEndNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetBeginNo()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'beginNo' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetEndNo()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'endNo' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, STR_DELIVERY_DETAIL struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.deliveryDetailId != null) {
        oprot.writeFieldBegin(DELIVERY_DETAIL_ID_FIELD_DESC);
        oprot.writeString(struct.deliveryDetailId);
        oprot.writeFieldEnd();
      }
      if (struct.chestId != null) {
        oprot.writeFieldBegin(CHEST_ID_FIELD_DESC);
        oprot.writeString(struct.chestId);
        oprot.writeFieldEnd();
      }
      if (struct.applyId != null) {
        oprot.writeFieldBegin(APPLY_ID_FIELD_DESC);
        oprot.writeString(struct.applyId);
        oprot.writeFieldEnd();
      }
      if (struct.ticketTypeId != null) {
        oprot.writeFieldBegin(TICKET_TYPE_ID_FIELD_DESC);
        oprot.writeString(struct.ticketTypeId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(BEGIN_NO_FIELD_DESC);
      oprot.writeI64(struct.beginNo);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(END_NO_FIELD_DESC);
      oprot.writeI64(struct.endNo);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class STR_DELIVERY_DETAILTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public STR_DELIVERY_DETAILTupleScheme getScheme() {
      return new STR_DELIVERY_DETAILTupleScheme();
    }
  }

  private static class STR_DELIVERY_DETAILTupleScheme extends org.apache.thrift.scheme.TupleScheme<STR_DELIVERY_DETAIL> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, STR_DELIVERY_DETAIL struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeString(struct.deliveryDetailId);
      oprot.writeString(struct.chestId);
      oprot.writeString(struct.applyId);
      oprot.writeString(struct.ticketTypeId);
      oprot.writeI64(struct.beginNo);
      oprot.writeI64(struct.endNo);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, STR_DELIVERY_DETAIL struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.deliveryDetailId = iprot.readString();
      struct.setDeliveryDetailIdIsSet(true);
      struct.chestId = iprot.readString();
      struct.setChestIdIsSet(true);
      struct.applyId = iprot.readString();
      struct.setApplyIdIsSet(true);
      struct.ticketTypeId = iprot.readString();
      struct.setTicketTypeIdIsSet(true);
      struct.beginNo = iprot.readI64();
      struct.setBeginNoIsSet(true);
      struct.endNo = iprot.readI64();
      struct.setEndNoIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

